{"ast":null,"code":"import { Array as ArrayT } from './Array.js';\nimport { Number as NumberT } from './Number.js';\nimport * as utils from './utils.js';\nexport class LazyArray extends ArrayT {\n  decode(stream, parent) {\n    const {\n      pos\n    } = stream;\n    const length = utils.resolveLength(this.length, stream, parent);\n    if (this.length instanceof NumberT) {\n      parent = {\n        parent,\n        _startOffset: pos,\n        _currentOffset: 0,\n        _length: length\n      };\n    }\n    const res = new LazyArrayValue(this.type, length, stream, parent);\n    stream.pos += length * this.type.size(null, parent);\n    return res;\n  }\n  size(val, ctx) {\n    if (val instanceof LazyArrayValue) {\n      val = val.toArray();\n    }\n    return super.size(val, ctx);\n  }\n  encode(stream, val, ctx) {\n    if (val instanceof LazyArrayValue) {\n      val = val.toArray();\n    }\n    return super.encode(stream, val, ctx);\n  }\n}\nclass LazyArrayValue {\n  constructor(type, length, stream, ctx) {\n    this.type = type;\n    this.length = length;\n    this.stream = stream;\n    this.ctx = ctx;\n    this.base = this.stream.pos;\n    this.items = [];\n  }\n  get(index) {\n    if (index < 0 || index >= this.length) {\n      return undefined;\n    }\n    if (this.items[index] == null) {\n      const {\n        pos\n      } = this.stream;\n      this.stream.pos = this.base + this.type.size(null, this.ctx) * index;\n      this.items[index] = this.type.decode(this.stream, this.ctx);\n      this.stream.pos = pos;\n    }\n    return this.items[index];\n  }\n  toArray() {\n    const result = [];\n    for (let i = 0, end = this.length; i < end; i++) {\n      result.push(this.get(i));\n    }\n    return result;\n  }\n}","map":{"version":3,"names":["Array","ArrayT","Number","NumberT","utils","LazyArray","decode","stream","parent","pos","length","resolveLength","_startOffset","_currentOffset","_length","res","LazyArrayValue","type","size","val","ctx","toArray","encode","constructor","base","items","get","index","undefined","result","i","end","push"],"sources":["C:/Users/Abdullah/Desktop/Project/TTP-Project/client/node_modules/restructure/src/LazyArray.js"],"sourcesContent":["import {Array as ArrayT} from './Array.js';\nimport {Number as NumberT} from './Number.js';\nimport * as utils from './utils.js';\n\nexport class LazyArray extends ArrayT {\n  decode(stream, parent) {\n    const { pos } = stream;\n    const length = utils.resolveLength(this.length, stream, parent);\n\n    if (this.length instanceof NumberT) {\n      parent = {\n        parent,\n        _startOffset: pos,\n        _currentOffset: 0,\n        _length: length\n      };\n    }\n\n    const res = new LazyArrayValue(this.type, length, stream, parent);\n\n    stream.pos += length * this.type.size(null, parent);\n    return res;\n  }\n\n  size(val, ctx) {\n    if (val instanceof LazyArrayValue) {\n      val = val.toArray();\n    }\n\n    return super.size(val, ctx);\n  }\n\n  encode(stream, val, ctx) {\n    if (val instanceof LazyArrayValue) {\n      val = val.toArray();\n    }\n\n    return super.encode(stream, val, ctx);\n  }\n}\n\nclass LazyArrayValue {\n  constructor(type, length, stream, ctx) {\n    this.type = type;\n    this.length = length;\n    this.stream = stream;\n    this.ctx = ctx;\n    this.base = this.stream.pos;\n    this.items = [];\n  }\n\n  get(index) {\n    if ((index < 0) || (index >= this.length)) {\n      return undefined;\n    }\n\n    if (this.items[index] == null) {\n      const { pos } = this.stream;\n      this.stream.pos = this.base + (this.type.size(null, this.ctx) * index);\n      this.items[index] = this.type.decode(this.stream, this.ctx);\n      this.stream.pos = pos;\n    }\n\n    return this.items[index];\n  }\n\n  toArray() {\n    const result = [];\n    for (let i = 0, end = this.length; i < end; i++) {\n      result.push(this.get(i));\n    }\n    return result;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}