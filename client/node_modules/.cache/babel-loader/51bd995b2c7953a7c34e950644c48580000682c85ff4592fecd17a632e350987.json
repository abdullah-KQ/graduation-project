{"ast":null,"code":"/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Transformations on dictionary words.\n*/\n\nvar BrotliDictionary = require('./dictionary');\nvar kIdentity = 0;\nvar kOmitLast1 = 1;\nvar kOmitLast2 = 2;\nvar kOmitLast3 = 3;\nvar kOmitLast4 = 4;\nvar kOmitLast5 = 5;\nvar kOmitLast6 = 6;\nvar kOmitLast7 = 7;\nvar kOmitLast8 = 8;\nvar kOmitLast9 = 9;\nvar kUppercaseFirst = 10;\nvar kUppercaseAll = 11;\nvar kOmitFirst1 = 12;\nvar kOmitFirst2 = 13;\nvar kOmitFirst3 = 14;\nvar kOmitFirst4 = 15;\nvar kOmitFirst5 = 16;\nvar kOmitFirst6 = 17;\nvar kOmitFirst7 = 18;\nvar kOmitFirst8 = 19;\nvar kOmitFirst9 = 20;\nfunction Transform(prefix, transform, suffix) {\n  this.prefix = new Uint8Array(prefix.length);\n  this.transform = transform;\n  this.suffix = new Uint8Array(suffix.length);\n  for (var i = 0; i < prefix.length; i++) this.prefix[i] = prefix.charCodeAt(i);\n  for (var i = 0; i < suffix.length; i++) this.suffix[i] = suffix.charCodeAt(i);\n}\nvar kTransforms = [new Transform(\"\", kIdentity, \"\"), new Transform(\"\", kIdentity, \" \"), new Transform(\" \", kIdentity, \" \"), new Transform(\"\", kOmitFirst1, \"\"), new Transform(\"\", kUppercaseFirst, \" \"), new Transform(\"\", kIdentity, \" the \"), new Transform(\" \", kIdentity, \"\"), new Transform(\"s \", kIdentity, \" \"), new Transform(\"\", kIdentity, \" of \"), new Transform(\"\", kUppercaseFirst, \"\"), new Transform(\"\", kIdentity, \" and \"), new Transform(\"\", kOmitFirst2, \"\"), new Transform(\"\", kOmitLast1, \"\"), new Transform(\", \", kIdentity, \" \"), new Transform(\"\", kIdentity, \", \"), new Transform(\" \", kUppercaseFirst, \" \"), new Transform(\"\", kIdentity, \" in \"), new Transform(\"\", kIdentity, \" to \"), new Transform(\"e \", kIdentity, \" \"), new Transform(\"\", kIdentity, \"\\\"\"), new Transform(\"\", kIdentity, \".\"), new Transform(\"\", kIdentity, \"\\\">\"), new Transform(\"\", kIdentity, \"\\n\"), new Transform(\"\", kOmitLast3, \"\"), new Transform(\"\", kIdentity, \"]\"), new Transform(\"\", kIdentity, \" for \"), new Transform(\"\", kOmitFirst3, \"\"), new Transform(\"\", kOmitLast2, \"\"), new Transform(\"\", kIdentity, \" a \"), new Transform(\"\", kIdentity, \" that \"), new Transform(\" \", kUppercaseFirst, \"\"), new Transform(\"\", kIdentity, \". \"), new Transform(\".\", kIdentity, \"\"), new Transform(\" \", kIdentity, \", \"), new Transform(\"\", kOmitFirst4, \"\"), new Transform(\"\", kIdentity, \" with \"), new Transform(\"\", kIdentity, \"'\"), new Transform(\"\", kIdentity, \" from \"), new Transform(\"\", kIdentity, \" by \"), new Transform(\"\", kOmitFirst5, \"\"), new Transform(\"\", kOmitFirst6, \"\"), new Transform(\" the \", kIdentity, \"\"), new Transform(\"\", kOmitLast4, \"\"), new Transform(\"\", kIdentity, \". The \"), new Transform(\"\", kUppercaseAll, \"\"), new Transform(\"\", kIdentity, \" on \"), new Transform(\"\", kIdentity, \" as \"), new Transform(\"\", kIdentity, \" is \"), new Transform(\"\", kOmitLast7, \"\"), new Transform(\"\", kOmitLast1, \"ing \"), new Transform(\"\", kIdentity, \"\\n\\t\"), new Transform(\"\", kIdentity, \":\"), new Transform(\" \", kIdentity, \". \"), new Transform(\"\", kIdentity, \"ed \"), new Transform(\"\", kOmitFirst9, \"\"), new Transform(\"\", kOmitFirst7, \"\"), new Transform(\"\", kOmitLast6, \"\"), new Transform(\"\", kIdentity, \"(\"), new Transform(\"\", kUppercaseFirst, \", \"), new Transform(\"\", kOmitLast8, \"\"), new Transform(\"\", kIdentity, \" at \"), new Transform(\"\", kIdentity, \"ly \"), new Transform(\" the \", kIdentity, \" of \"), new Transform(\"\", kOmitLast5, \"\"), new Transform(\"\", kOmitLast9, \"\"), new Transform(\" \", kUppercaseFirst, \", \"), new Transform(\"\", kUppercaseFirst, \"\\\"\"), new Transform(\".\", kIdentity, \"(\"), new Transform(\"\", kUppercaseAll, \" \"), new Transform(\"\", kUppercaseFirst, \"\\\">\"), new Transform(\"\", kIdentity, \"=\\\"\"), new Transform(\" \", kIdentity, \".\"), new Transform(\".com/\", kIdentity, \"\"), new Transform(\" the \", kIdentity, \" of the \"), new Transform(\"\", kUppercaseFirst, \"'\"), new Transform(\"\", kIdentity, \". This \"), new Transform(\"\", kIdentity, \",\"), new Transform(\".\", kIdentity, \" \"), new Transform(\"\", kUppercaseFirst, \"(\"), new Transform(\"\", kUppercaseFirst, \".\"), new Transform(\"\", kIdentity, \" not \"), new Transform(\" \", kIdentity, \"=\\\"\"), new Transform(\"\", kIdentity, \"er \"), new Transform(\" \", kUppercaseAll, \" \"), new Transform(\"\", kIdentity, \"al \"), new Transform(\" \", kUppercaseAll, \"\"), new Transform(\"\", kIdentity, \"='\"), new Transform(\"\", kUppercaseAll, \"\\\"\"), new Transform(\"\", kUppercaseFirst, \". \"), new Transform(\" \", kIdentity, \"(\"), new Transform(\"\", kIdentity, \"ful \"), new Transform(\" \", kUppercaseFirst, \". \"), new Transform(\"\", kIdentity, \"ive \"), new Transform(\"\", kIdentity, \"less \"), new Transform(\"\", kUppercaseAll, \"'\"), new Transform(\"\", kIdentity, \"est \"), new Transform(\" \", kUppercaseFirst, \".\"), new Transform(\"\", kUppercaseAll, \"\\\">\"), new Transform(\" \", kIdentity, \"='\"), new Transform(\"\", kUppercaseFirst, \",\"), new Transform(\"\", kIdentity, \"ize \"), new Transform(\"\", kUppercaseAll, \".\"), new Transform(\"\\xc2\\xa0\", kIdentity, \"\"), new Transform(\" \", kIdentity, \",\"), new Transform(\"\", kUppercaseFirst, \"=\\\"\"), new Transform(\"\", kUppercaseAll, \"=\\\"\"), new Transform(\"\", kIdentity, \"ous \"), new Transform(\"\", kUppercaseAll, \", \"), new Transform(\"\", kUppercaseFirst, \"='\"), new Transform(\" \", kUppercaseFirst, \",\"), new Transform(\" \", kUppercaseAll, \"=\\\"\"), new Transform(\" \", kUppercaseAll, \", \"), new Transform(\"\", kUppercaseAll, \",\"), new Transform(\"\", kUppercaseAll, \"(\"), new Transform(\"\", kUppercaseAll, \". \"), new Transform(\" \", kUppercaseAll, \".\"), new Transform(\"\", kUppercaseAll, \"='\"), new Transform(\" \", kUppercaseAll, \". \"), new Transform(\" \", kUppercaseFirst, \"=\\\"\"), new Transform(\" \", kUppercaseAll, \"='\"), new Transform(\" \", kUppercaseFirst, \"='\")];\nexports.kTransforms = kTransforms;\nexports.kNumTransforms = kTransforms.length;\nfunction ToUpperCase(p, i) {\n  if (p[i] < 0xc0) {\n    if (p[i] >= 97 && p[i] <= 122) {\n      p[i] ^= 32;\n    }\n    return 1;\n  }\n\n  /* An overly simplified uppercasing model for utf-8. */\n  if (p[i] < 0xe0) {\n    p[i + 1] ^= 32;\n    return 2;\n  }\n\n  /* An arbitrary transform for three byte characters. */\n  p[i + 2] ^= 5;\n  return 3;\n}\nexports.transformDictionaryWord = function (dst, idx, word, len, transform) {\n  var prefix = kTransforms[transform].prefix;\n  var suffix = kTransforms[transform].suffix;\n  var t = kTransforms[transform].transform;\n  var skip = t < kOmitFirst1 ? 0 : t - (kOmitFirst1 - 1);\n  var i = 0;\n  var start_idx = idx;\n  var uppercase;\n  if (skip > len) {\n    skip = len;\n  }\n  var prefix_pos = 0;\n  while (prefix_pos < prefix.length) {\n    dst[idx++] = prefix[prefix_pos++];\n  }\n  word += skip;\n  len -= skip;\n  if (t <= kOmitLast9) {\n    len -= t;\n  }\n  for (i = 0; i < len; i++) {\n    dst[idx++] = BrotliDictionary.dictionary[word + i];\n  }\n  uppercase = idx - len;\n  if (t === kUppercaseFirst) {\n    ToUpperCase(dst, uppercase);\n  } else if (t === kUppercaseAll) {\n    while (len > 0) {\n      var step = ToUpperCase(dst, uppercase);\n      uppercase += step;\n      len -= step;\n    }\n  }\n  var suffix_pos = 0;\n  while (suffix_pos < suffix.length) {\n    dst[idx++] = suffix[suffix_pos++];\n  }\n  return idx - start_idx;\n};","map":{"version":3,"names":["BrotliDictionary","require","kIdentity","kOmitLast1","kOmitLast2","kOmitLast3","kOmitLast4","kOmitLast5","kOmitLast6","kOmitLast7","kOmitLast8","kOmitLast9","kUppercaseFirst","kUppercaseAll","kOmitFirst1","kOmitFirst2","kOmitFirst3","kOmitFirst4","kOmitFirst5","kOmitFirst6","kOmitFirst7","kOmitFirst8","kOmitFirst9","Transform","prefix","transform","suffix","Uint8Array","length","i","charCodeAt","kTransforms","exports","kNumTransforms","ToUpperCase","p","transformDictionaryWord","dst","idx","word","len","t","skip","start_idx","uppercase","prefix_pos","dictionary","step","suffix_pos"],"sources":["C:/Users/Abdullah/Desktop/Project/TTP-Project/client/node_modules/brotli/dec/transform.js"],"sourcesContent":["/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Transformations on dictionary words.\n*/\n\nvar BrotliDictionary = require('./dictionary');\n\nvar kIdentity       = 0;\nvar kOmitLast1      = 1;\nvar kOmitLast2      = 2;\nvar kOmitLast3      = 3;\nvar kOmitLast4      = 4;\nvar kOmitLast5      = 5;\nvar kOmitLast6      = 6;\nvar kOmitLast7      = 7;\nvar kOmitLast8      = 8;\nvar kOmitLast9      = 9;\nvar kUppercaseFirst = 10;\nvar kUppercaseAll   = 11;\nvar kOmitFirst1     = 12;\nvar kOmitFirst2     = 13;\nvar kOmitFirst3     = 14;\nvar kOmitFirst4     = 15;\nvar kOmitFirst5     = 16;\nvar kOmitFirst6     = 17;\nvar kOmitFirst7     = 18;\nvar kOmitFirst8     = 19;\nvar kOmitFirst9     = 20;\n\nfunction Transform(prefix, transform, suffix) {\n  this.prefix = new Uint8Array(prefix.length);\n  this.transform = transform;\n  this.suffix = new Uint8Array(suffix.length);\n  \n  for (var i = 0; i < prefix.length; i++)\n    this.prefix[i] = prefix.charCodeAt(i);\n  \n  for (var i = 0; i < suffix.length; i++)\n    this.suffix[i] = suffix.charCodeAt(i);\n}\n\nvar kTransforms = [\n     new Transform(         \"\", kIdentity,       \"\"           ),\n     new Transform(         \"\", kIdentity,       \" \"          ),\n     new Transform(        \" \", kIdentity,       \" \"          ),\n     new Transform(         \"\", kOmitFirst1,     \"\"           ),\n     new Transform(         \"\", kUppercaseFirst, \" \"          ),\n     new Transform(         \"\", kIdentity,       \" the \"      ),\n     new Transform(        \" \", kIdentity,       \"\"           ),\n     new Transform(       \"s \", kIdentity,       \" \"          ),\n     new Transform(         \"\", kIdentity,       \" of \"       ),\n     new Transform(         \"\", kUppercaseFirst, \"\"           ),\n     new Transform(         \"\", kIdentity,       \" and \"      ),\n     new Transform(         \"\", kOmitFirst2,     \"\"           ),\n     new Transform(         \"\", kOmitLast1,      \"\"           ),\n     new Transform(       \", \", kIdentity,       \" \"          ),\n     new Transform(         \"\", kIdentity,       \", \"         ),\n     new Transform(        \" \", kUppercaseFirst, \" \"          ),\n     new Transform(         \"\", kIdentity,       \" in \"       ),\n     new Transform(         \"\", kIdentity,       \" to \"       ),\n     new Transform(       \"e \", kIdentity,       \" \"          ),\n     new Transform(         \"\", kIdentity,       \"\\\"\"         ),\n     new Transform(         \"\", kIdentity,       \".\"          ),\n     new Transform(         \"\", kIdentity,       \"\\\">\"        ),\n     new Transform(         \"\", kIdentity,       \"\\n\"         ),\n     new Transform(         \"\", kOmitLast3,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \"]\"          ),\n     new Transform(         \"\", kIdentity,       \" for \"      ),\n     new Transform(         \"\", kOmitFirst3,     \"\"           ),\n     new Transform(         \"\", kOmitLast2,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \" a \"        ),\n     new Transform(         \"\", kIdentity,       \" that \"     ),\n     new Transform(        \" \", kUppercaseFirst, \"\"           ),\n     new Transform(         \"\", kIdentity,       \". \"         ),\n     new Transform(        \".\", kIdentity,       \"\"           ),\n     new Transform(        \" \", kIdentity,       \", \"         ),\n     new Transform(         \"\", kOmitFirst4,     \"\"           ),\n     new Transform(         \"\", kIdentity,       \" with \"     ),\n     new Transform(         \"\", kIdentity,       \"'\"          ),\n     new Transform(         \"\", kIdentity,       \" from \"     ),\n     new Transform(         \"\", kIdentity,       \" by \"       ),\n     new Transform(         \"\", kOmitFirst5,     \"\"           ),\n     new Transform(         \"\", kOmitFirst6,     \"\"           ),\n     new Transform(    \" the \", kIdentity,       \"\"           ),\n     new Transform(         \"\", kOmitLast4,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \". The \"     ),\n     new Transform(         \"\", kUppercaseAll,   \"\"           ),\n     new Transform(         \"\", kIdentity,       \" on \"       ),\n     new Transform(         \"\", kIdentity,       \" as \"       ),\n     new Transform(         \"\", kIdentity,       \" is \"       ),\n     new Transform(         \"\", kOmitLast7,      \"\"           ),\n     new Transform(         \"\", kOmitLast1,      \"ing \"       ),\n     new Transform(         \"\", kIdentity,       \"\\n\\t\"       ),\n     new Transform(         \"\", kIdentity,       \":\"          ),\n     new Transform(        \" \", kIdentity,       \". \"         ),\n     new Transform(         \"\", kIdentity,       \"ed \"        ),\n     new Transform(         \"\", kOmitFirst9,     \"\"           ),\n     new Transform(         \"\", kOmitFirst7,     \"\"           ),\n     new Transform(         \"\", kOmitLast6,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \"(\"          ),\n     new Transform(         \"\", kUppercaseFirst, \", \"         ),\n     new Transform(         \"\", kOmitLast8,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \" at \"       ),\n     new Transform(         \"\", kIdentity,       \"ly \"        ),\n     new Transform(    \" the \", kIdentity,       \" of \"       ),\n     new Transform(         \"\", kOmitLast5,      \"\"           ),\n     new Transform(         \"\", kOmitLast9,      \"\"           ),\n     new Transform(        \" \", kUppercaseFirst, \", \"         ),\n     new Transform(         \"\", kUppercaseFirst, \"\\\"\"         ),\n     new Transform(        \".\", kIdentity,       \"(\"          ),\n     new Transform(         \"\", kUppercaseAll,   \" \"          ),\n     new Transform(         \"\", kUppercaseFirst, \"\\\">\"        ),\n     new Transform(         \"\", kIdentity,       \"=\\\"\"        ),\n     new Transform(        \" \", kIdentity,       \".\"          ),\n     new Transform(    \".com/\", kIdentity,       \"\"           ),\n     new Transform(    \" the \", kIdentity,       \" of the \"   ),\n     new Transform(         \"\", kUppercaseFirst, \"'\"          ),\n     new Transform(         \"\", kIdentity,       \". This \"    ),\n     new Transform(         \"\", kIdentity,       \",\"          ),\n     new Transform(        \".\", kIdentity,       \" \"          ),\n     new Transform(         \"\", kUppercaseFirst, \"(\"          ),\n     new Transform(         \"\", kUppercaseFirst, \".\"          ),\n     new Transform(         \"\", kIdentity,       \" not \"      ),\n     new Transform(        \" \", kIdentity,       \"=\\\"\"        ),\n     new Transform(         \"\", kIdentity,       \"er \"        ),\n     new Transform(        \" \", kUppercaseAll,   \" \"          ),\n     new Transform(         \"\", kIdentity,       \"al \"        ),\n     new Transform(        \" \", kUppercaseAll,   \"\"           ),\n     new Transform(         \"\", kIdentity,       \"='\"         ),\n     new Transform(         \"\", kUppercaseAll,   \"\\\"\"         ),\n     new Transform(         \"\", kUppercaseFirst, \". \"         ),\n     new Transform(        \" \", kIdentity,       \"(\"          ),\n     new Transform(         \"\", kIdentity,       \"ful \"       ),\n     new Transform(        \" \", kUppercaseFirst, \". \"         ),\n     new Transform(         \"\", kIdentity,       \"ive \"       ),\n     new Transform(         \"\", kIdentity,       \"less \"      ),\n     new Transform(         \"\", kUppercaseAll,   \"'\"          ),\n     new Transform(         \"\", kIdentity,       \"est \"       ),\n     new Transform(        \" \", kUppercaseFirst, \".\"          ),\n     new Transform(         \"\", kUppercaseAll,   \"\\\">\"        ),\n     new Transform(        \" \", kIdentity,       \"='\"         ),\n     new Transform(         \"\", kUppercaseFirst, \",\"          ),\n     new Transform(         \"\", kIdentity,       \"ize \"       ),\n     new Transform(         \"\", kUppercaseAll,   \".\"          ),\n     new Transform( \"\\xc2\\xa0\", kIdentity,       \"\"           ),\n     new Transform(        \" \", kIdentity,       \",\"          ),\n     new Transform(         \"\", kUppercaseFirst, \"=\\\"\"        ),\n     new Transform(         \"\", kUppercaseAll,   \"=\\\"\"        ),\n     new Transform(         \"\", kIdentity,       \"ous \"       ),\n     new Transform(         \"\", kUppercaseAll,   \", \"         ),\n     new Transform(         \"\", kUppercaseFirst, \"='\"         ),\n     new Transform(        \" \", kUppercaseFirst, \",\"          ),\n     new Transform(        \" \", kUppercaseAll,   \"=\\\"\"        ),\n     new Transform(        \" \", kUppercaseAll,   \", \"         ),\n     new Transform(         \"\", kUppercaseAll,   \",\"          ),\n     new Transform(         \"\", kUppercaseAll,   \"(\"          ),\n     new Transform(         \"\", kUppercaseAll,   \". \"         ),\n     new Transform(        \" \", kUppercaseAll,   \".\"          ),\n     new Transform(         \"\", kUppercaseAll,   \"='\"         ),\n     new Transform(        \" \", kUppercaseAll,   \". \"         ),\n     new Transform(        \" \", kUppercaseFirst, \"=\\\"\"        ),\n     new Transform(        \" \", kUppercaseAll,   \"='\"         ),\n     new Transform(        \" \", kUppercaseFirst, \"='\"         )\n];\n\nexports.kTransforms = kTransforms;\nexports.kNumTransforms = kTransforms.length;\n\nfunction ToUpperCase(p, i) {\n  if (p[i] < 0xc0) {\n    if (p[i] >= 97 && p[i] <= 122) {\n      p[i] ^= 32;\n    }\n    return 1;\n  }\n  \n  /* An overly simplified uppercasing model for utf-8. */\n  if (p[i] < 0xe0) {\n    p[i + 1] ^= 32;\n    return 2;\n  }\n  \n  /* An arbitrary transform for three byte characters. */\n  p[i + 2] ^= 5;\n  return 3;\n}\n\nexports.transformDictionaryWord = function(dst, idx, word, len, transform) {\n  var prefix = kTransforms[transform].prefix;\n  var suffix = kTransforms[transform].suffix;\n  var t = kTransforms[transform].transform;\n  var skip = t < kOmitFirst1 ? 0 : t - (kOmitFirst1 - 1);\n  var i = 0;\n  var start_idx = idx;\n  var uppercase;\n  \n  if (skip > len) {\n    skip = len;\n  }\n  \n  var prefix_pos = 0;\n  while (prefix_pos < prefix.length) {\n    dst[idx++] = prefix[prefix_pos++];\n  }\n  \n  word += skip;\n  len -= skip;\n  \n  if (t <= kOmitLast9) {\n    len -= t;\n  }\n  \n  for (i = 0; i < len; i++) {\n    dst[idx++] = BrotliDictionary.dictionary[word + i];\n  }\n  \n  uppercase = idx - len;\n  \n  if (t === kUppercaseFirst) {\n    ToUpperCase(dst, uppercase);\n  } else if (t === kUppercaseAll) {\n    while (len > 0) {\n      var step = ToUpperCase(dst, uppercase);\n      uppercase += step;\n      len -= step;\n    }\n  }\n  \n  var suffix_pos = 0;\n  while (suffix_pos < suffix.length) {\n    dst[idx++] = suffix[suffix_pos++];\n  }\n  \n  return idx - start_idx;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}