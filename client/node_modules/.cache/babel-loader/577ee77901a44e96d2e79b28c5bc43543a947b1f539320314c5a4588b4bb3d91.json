{"ast":null,"code":"// Node back-compat.\nconst ENCODING_MAPPING = {\n  utf16le: 'utf-16le',\n  ucs2: 'utf-16le',\n  utf16be: 'utf-16be'\n};\nexport class DecodeStream {\n  constructor(buffer) {\n    this.buffer = buffer;\n    this.view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n    this.pos = 0;\n    this.length = this.buffer.length;\n  }\n  readString(length) {\n    let encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ascii';\n    encoding = ENCODING_MAPPING[encoding] || encoding;\n    let buf = this.readBuffer(length);\n    try {\n      let decoder = new TextDecoder(encoding);\n      return decoder.decode(buf);\n    } catch (err) {\n      return buf;\n    }\n  }\n  readBuffer(length) {\n    return this.buffer.slice(this.pos, this.pos += length);\n  }\n  readUInt24BE() {\n    return (this.readUInt16BE() << 8) + this.readUInt8();\n  }\n  readUInt24LE() {\n    return this.readUInt16LE() + (this.readUInt8() << 16);\n  }\n  readInt24BE() {\n    return (this.readInt16BE() << 8) + this.readUInt8();\n  }\n  readInt24LE() {\n    return this.readUInt16LE() + (this.readInt8() << 16);\n  }\n}\nDecodeStream.TYPES = {\n  UInt8: 1,\n  UInt16: 2,\n  UInt24: 3,\n  UInt32: 4,\n  Int8: 1,\n  Int16: 2,\n  Int24: 3,\n  Int32: 4,\n  Float: 4,\n  Double: 8\n};\nfor (let key of Object.getOwnPropertyNames(DataView.prototype)) {\n  if (key.slice(0, 3) === 'get') {\n    let type = key.slice(3).replace('Ui', 'UI');\n    if (type === 'Float32') {\n      type = 'Float';\n    } else if (type === 'Float64') {\n      type = 'Double';\n    }\n    let bytes = DecodeStream.TYPES[type];\n    DecodeStream.prototype['read' + type + (bytes === 1 ? '' : 'BE')] = function () {\n      const ret = this.view[key](this.pos, false);\n      this.pos += bytes;\n      return ret;\n    };\n    if (bytes !== 1) {\n      DecodeStream.prototype['read' + type + 'LE'] = function () {\n        const ret = this.view[key](this.pos, true);\n        this.pos += bytes;\n        return ret;\n      };\n    }\n  }\n}","map":{"version":3,"names":["ENCODING_MAPPING","utf16le","ucs2","utf16be","DecodeStream","constructor","buffer","view","DataView","byteOffset","byteLength","pos","length","readString","encoding","buf","readBuffer","decoder","TextDecoder","decode","err","slice","readUInt24BE","readUInt16BE","readUInt8","readUInt24LE","readUInt16LE","readInt24BE","readInt16BE","readInt24LE","readInt8","TYPES","UInt8","UInt16","UInt24","UInt32","Int8","Int16","Int24","Int32","Float","Double","key","Object","getOwnPropertyNames","prototype","type","replace","bytes","ret"],"sources":["C:/Users/Abdullah/Desktop/Project/TTP-Project/client/node_modules/restructure/src/DecodeStream.js"],"sourcesContent":["// Node back-compat.\nconst ENCODING_MAPPING = {\n  utf16le: 'utf-16le',\n  ucs2: 'utf-16le',\n  utf16be: 'utf-16be'\n}\n\nexport class DecodeStream {\n  constructor(buffer) {\n    this.buffer = buffer;\n    this.view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n    this.pos = 0;\n    this.length = this.buffer.length;\n  }\n\n  readString(length, encoding = 'ascii') {\n    encoding = ENCODING_MAPPING[encoding] || encoding;\n\n    let buf = this.readBuffer(length);\n    try {\n      let decoder = new TextDecoder(encoding);\n      return decoder.decode(buf);\n    } catch (err) {\n      return buf;\n    }\n  }\n\n  readBuffer(length) {\n    return this.buffer.slice(this.pos, (this.pos += length));\n  }\n\n  readUInt24BE() {\n    return (this.readUInt16BE() << 8) + this.readUInt8();\n  }\n\n  readUInt24LE() {\n    return this.readUInt16LE() + (this.readUInt8() << 16);\n  }\n\n  readInt24BE() {\n    return (this.readInt16BE() << 8) + this.readUInt8();\n  }\n\n  readInt24LE() {\n    return this.readUInt16LE() + (this.readInt8() << 16);\n  }\n}\n\nDecodeStream.TYPES = {\n  UInt8: 1,\n  UInt16: 2,\n  UInt24: 3,\n  UInt32: 4,\n  Int8: 1,\n  Int16: 2,\n  Int24: 3,\n  Int32: 4,\n  Float: 4,\n  Double: 8\n};\n\nfor (let key of Object.getOwnPropertyNames(DataView.prototype)) {\n  if (key.slice(0, 3) === 'get') {\n    let type = key.slice(3).replace('Ui', 'UI');\n    if (type === 'Float32') {\n      type = 'Float';\n    } else if (type === 'Float64') {\n      type = 'Double';\n    }\n    let bytes = DecodeStream.TYPES[type];\n    DecodeStream.prototype['read' + type + (bytes === 1 ? '' : 'BE')] = function () {\n      const ret = this.view[key](this.pos, false);\n      this.pos += bytes;\n      return ret;\n    };\n\n    if (bytes !== 1) {\n      DecodeStream.prototype['read' + type + 'LE'] = function () {\n        const ret = this.view[key](this.pos, true);\n        this.pos += bytes;\n        return ret;\n      };\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}