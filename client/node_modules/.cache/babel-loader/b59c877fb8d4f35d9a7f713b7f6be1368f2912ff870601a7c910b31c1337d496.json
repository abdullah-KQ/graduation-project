{"ast":null,"code":"import * as P from '@react-pdf/primitives';\nimport { isNil, matchPercent } from '@react-pdf/fns';\nimport absPath from 'abs-svg-path';\nimport parsePath from 'parse-svg-path';\nimport normalizePath from 'normalize-svg-path';\nimport colorString from 'color-string';\nimport _extends from '@babel/runtime/helpers/extends';\nvar renderPath = function renderPath(ctx, node) {\n  var _node$props;\n  var d = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.d;\n  if (d) ctx.path(node.props.d);\n};\nvar KAPPA$3 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nvar renderRect = function renderRect(ctx, node) {\n  var _node$props, _node$props2, _node$props3, _node$props4, _node$props5, _node$props6;\n  var x = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.x) || 0;\n  var y = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.y) || 0;\n  var rx = ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.rx) || 0;\n  var ry = ((_node$props4 = node.props) === null || _node$props4 === void 0 ? void 0 : _node$props4.ry) || 0;\n  var width = ((_node$props5 = node.props) === null || _node$props5 === void 0 ? void 0 : _node$props5.width) || 0;\n  var height = ((_node$props6 = node.props) === null || _node$props6 === void 0 ? void 0 : _node$props6.height) || 0;\n  if (!width || !height) return;\n  if (rx && ry) {\n    var krx = rx * KAPPA$3;\n    var kry = ry * KAPPA$3;\n    ctx.moveTo(x + rx, y);\n    ctx.lineTo(x - rx + width, y);\n    ctx.bezierCurveTo(x - rx + width + krx, y, x + width, y + ry - kry, x + width, y + ry);\n    ctx.lineTo(x + width, y + height - ry);\n    ctx.bezierCurveTo(x + width, y + height - ry + kry, x - rx + width + krx, y + height, x - rx + width, y + height);\n    ctx.lineTo(x + rx, y + height);\n    ctx.bezierCurveTo(x + rx - krx, y + height, x, y + height - ry + kry, x, y + height - ry);\n    ctx.lineTo(x, y + ry);\n    ctx.bezierCurveTo(x, y + ry - kry, x + rx - krx, y, x + rx, y);\n  } else {\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x + width, y + height);\n    ctx.lineTo(x, y + height);\n  }\n  ctx.closePath();\n};\nvar renderLine$1 = function renderLine(ctx, node) {\n  var _ref = node.props || {},\n    x1 = _ref.x1,\n    x2 = _ref.x2,\n    y1 = _ref.y1,\n    y2 = _ref.y2;\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n};\nvar renderGroup = function renderGroup() {// noop\n};\nvar KAPPA$2 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nvar drawEllipse = function drawEllipse(ctx, cx, cy, rx, ry) {\n  var x = cx - rx;\n  var y = cy - ry;\n  var ox = rx * KAPPA$2;\n  var oy = ry * KAPPA$2;\n  var xe = x + rx * 2;\n  var ye = y + ry * 2;\n  var xm = x + rx;\n  var ym = y + ry;\n  ctx.moveTo(x, ym);\n  ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n  ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n  ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n  ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n  ctx.closePath();\n};\nvar renderEllipse = function renderEllipse(ctx, node) {\n  var _ref = node.props || {},\n    cx = _ref.cx,\n    cy = _ref.cy,\n    rx = _ref.rx,\n    ry = _ref.ry;\n  drawEllipse(ctx, cx, cy, rx, ry);\n};\nvar renderCircle = function renderCircle(ctx, node) {\n  var _node$props, _node$props2, _node$props3;\n  var cx = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.cx;\n  var cy = (_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.cy;\n  var r = (_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.r;\n  drawEllipse(ctx, cx, cy, r, r);\n};\nvar renderGlyphs = function renderGlyphs(ctx, glyphs, positions, x, y, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var scale = 1000 / ctx._fontSize;\n  var unitsPerEm = ctx._font.font.unitsPerEm || 1000;\n  var advanceWidthScale = 1000 / unitsPerEm; // Glyph encoding and positioning\n\n  var encodedGlyphs = ctx._font.encodeGlyphs(glyphs);\n  var encodedPositions = positions.map(function (pos, i) {\n    return {\n      xAdvance: pos.xAdvance * scale,\n      yAdvance: pos.yAdvance * scale,\n      xOffset: pos.xOffset,\n      yOffset: pos.yOffset,\n      advanceWidth: glyphs[i].advanceWidth * advanceWidthScale\n    };\n  });\n  return ctx._glyphs(encodedGlyphs, encodedPositions, x, y, options);\n};\nvar renderRun$1 = function renderRun(ctx, run) {\n  var runAdvanceWidth = run.xAdvance;\n  var _run$attributes = run.attributes,\n    font = _run$attributes.font,\n    fontSize = _run$attributes.fontSize,\n    color = _run$attributes.color,\n    opacity = _run$attributes.opacity;\n  ctx.fillColor(color);\n  ctx.fillOpacity(opacity);\n  if (font.sbix || font.COLR && font.CPAL) {\n    ctx.save();\n    ctx.translate(0, -run.ascent);\n    for (var i = 0; i < run.glyphs.length; i += 1) {\n      var position = run.positions[i];\n      var glyph = run.glyphs[i];\n      ctx.save();\n      ctx.translate(position.xOffset, position.yOffset);\n      glyph.render(ctx, fontSize);\n      ctx.restore();\n      ctx.translate(position.xAdvance, position.yAdvance);\n    }\n    ctx.restore();\n  } else {\n    ctx.font(typeof font.name === 'string' ? font.name : font, fontSize);\n    try {\n      renderGlyphs(ctx, run.glyphs, run.positions, 0, 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  ctx.translate(runAdvanceWidth, 0);\n};\nvar renderSpan = function renderSpan(ctx, line, textAnchor, dominantBaseline) {\n  var _line$box, _line$box2, _line$runs$, _line$runs$2, _line$runs$2$attribut;\n  ctx.save();\n  var x = ((_line$box = line.box) === null || _line$box === void 0 ? void 0 : _line$box.x) || 0;\n  var y = ((_line$box2 = line.box) === null || _line$box2 === void 0 ? void 0 : _line$box2.y) || 0;\n  var font = (_line$runs$ = line.runs[0]) === null || _line$runs$ === void 0 ? void 0 : _line$runs$.attributes.font;\n  var scale = ((_line$runs$2 = line.runs[0]) === null || _line$runs$2 === void 0 ? void 0 : (_line$runs$2$attribut = _line$runs$2.attributes) === null || _line$runs$2$attribut === void 0 ? void 0 : _line$runs$2$attribut.scale) || 1;\n  var width = line.xAdvance;\n  var ascent = font.ascent * scale;\n  var xHeight = font.xHeight * scale;\n  var descent = font.descent * scale;\n  var capHeight = font.capHeight * scale;\n  var xTranslate = x;\n  var yTranslate = y;\n  switch (textAnchor) {\n    case 'middle':\n      xTranslate = x - width / 2;\n      break;\n    case 'end':\n      xTranslate = x - width;\n      break;\n    default:\n      xTranslate = x;\n      break;\n  }\n  switch (dominantBaseline) {\n    case 'middle':\n    case 'central':\n      yTranslate = y + capHeight / 2;\n      break;\n    case 'hanging':\n      yTranslate = y + capHeight;\n      break;\n    case 'mathematical':\n      yTranslate = y + xHeight;\n      break;\n    case 'text-after-edge':\n      yTranslate = y + descent;\n      break;\n    case 'text-before-edge':\n      yTranslate = y + ascent;\n      break;\n    default:\n      yTranslate = y;\n      break;\n  }\n  ctx.translate(xTranslate, yTranslate);\n  line.runs.forEach(function (run) {\n    return renderRun$1(ctx, run);\n  });\n  ctx.restore();\n};\nvar renderSvgText = function renderSvgText(ctx, node) {\n  node.children.forEach(function (span) {\n    return renderSpan(ctx, span.lines[0], span.props.textAnchor, span.props.dominantBaseline);\n  });\n};\nvar pairs = function pairs(values) {\n  var result = [];\n  for (var i = 0; i < values.length; i += 2) {\n    result.push([values[i], values[i + 1]]);\n  }\n  return result;\n};\n/**\n * Parse svg-like points into number arrays\n *\n * @param {String} points string ex. \"20,30 50,60\"\n * @return {Array} points array ex. [[20, 30], [50, 60]]\n */\n\nvar parsePoints = function parsePoints(points) {\n  var values = (points || '').trim().replace(/,/g, ' ').replace(/(\\d)-(\\d)/g, '$1 -$2').split(/\\s+/);\n  if (values.length % 2 !== 0) {\n    values = values.slice(0, -1);\n  }\n  values = values.map(parseFloat);\n  return pairs(values);\n};\nvar drawPolyline = function drawPolyline(ctx, points) {\n  if (points.length > 0) {\n    ctx.moveTo(points[0][0], points[0][1]);\n    points.slice(1).forEach(function (p) {\n      return ctx.lineTo(p[0], p[1]);\n    });\n  }\n};\nvar renderPolyline = function renderPolyline(ctx, node) {\n  var points = parsePoints(node.props.points || '');\n  drawPolyline(ctx, points);\n};\nvar renderPolygon = function renderPolygon(ctx, node) {\n  renderPolyline(ctx, node);\n  ctx.closePath();\n};\nvar renderImage$1 = function renderImage(ctx, node) {\n  if (!node.image.data) return;\n  var _node$props = node.props,\n    x = _node$props.x,\n    y = _node$props.y;\n  var _node$style = node.style,\n    width = _node$style.width,\n    height = _node$style.height,\n    opacity = _node$style.opacity;\n  var paddingTop = node.box.paddingLeft || 0;\n  var paddingLeft = node.box.paddingLeft || 0;\n  if (width === 0 || height === 0) {\n    console.warn(\"Image with src '\" + node.props.href + \"' skipped due to invalid dimensions\");\n    return;\n  }\n  ctx.save();\n  ctx.fillOpacity(opacity || 1).image(node.image.data, x + paddingLeft, y + paddingTop, {\n    width: width,\n    height: height\n  });\n  ctx.restore();\n};\n\n// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nvar KAPPA$1 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nvar clipNode = function clipNode(ctx, node) {\n  if (!node.style) return;\n  var _node$box = node.box,\n    top = _node$box.top,\n    left = _node$box.left,\n    width = _node$box.width,\n    height = _node$box.height;\n  var _node$style = node.style,\n    _node$style$borderTop = _node$style.borderTopLeftRadius,\n    borderTopLeftRadius = _node$style$borderTop === void 0 ? 0 : _node$style$borderTop,\n    _node$style$borderTop2 = _node$style.borderTopRightRadius,\n    borderTopRightRadius = _node$style$borderTop2 === void 0 ? 0 : _node$style$borderTop2,\n    _node$style$borderBot = _node$style.borderBottomRightRadius,\n    borderBottomRightRadius = _node$style$borderBot === void 0 ? 0 : _node$style$borderBot,\n    _node$style$borderBot2 = _node$style.borderBottomLeftRadius,\n    borderBottomLeftRadius = _node$style$borderBot2 === void 0 ? 0 : _node$style$borderBot2; // Border top\n\n  var rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  var ctr = rtr * (1.0 - KAPPA$1);\n  ctx.moveTo(left + rtr, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - ctr, top, left + width, top + ctr, left + width, top + rtr); // Border right\n\n  var rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  var cbr = rbr * (1.0 - KAPPA$1);\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - cbr, left + width - cbr, top + height, left + width - rbr, top + height); // Border bottom\n\n  var rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n  var cbl = rbl * (1.0 - KAPPA$1);\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + cbl, top + height, left, top + height - cbl, left, top + height - rbl); // Border left\n\n  var rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  var ctl = rtl * (1.0 - KAPPA$1);\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + ctl, left + ctl, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n};\nvar applySingleTransformation = function applySingleTransformation(ctx, transform, origin) {\n  var operation = transform.operation,\n    value = transform.value;\n  switch (operation) {\n    case 'scale':\n      {\n        var scaleX = value[0],\n          scaleY = value[1];\n        ctx.scale(scaleX, scaleY, {\n          origin: origin\n        });\n        break;\n      }\n    case 'rotate':\n      {\n        var angle = value[0];\n        ctx.rotate(angle, {\n          origin: origin\n        });\n        break;\n      }\n    case 'translate':\n      {\n        var x = value[0],\n          y = value[1];\n        ctx.translate(x, y, {\n          origin: origin\n        });\n        break;\n      }\n    case 'skew':\n      {\n        var xAngle = value[0],\n          yAngle = value[1];\n        ctx.skew(xAngle, yAngle, {\n          origin: origin\n        });\n        break;\n      }\n    case 'matrix':\n      {\n        ctx.transform.apply(ctx, value);\n        break;\n      }\n    default:\n      {\n        console.error(\"Transform operation: '\" + operation + \"' doesn't supported\");\n      }\n  }\n};\nvar applyTransformations = function applyTransformations(ctx, node) {\n  var _node$style, _node$props;\n  if (!node.origin) return;\n  var origin = [node.origin.left, node.origin.top];\n  var operations = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.transform) || ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.transform) || [];\n  operations.forEach(function (operation) {\n    applySingleTransformation(ctx, operation, origin);\n  });\n};\nvar _boundingBoxFns;\nvar getPathBoundingBox = function getPathBoundingBox(node) {\n  var _node$props;\n  var path = normalizePath(absPath(parsePath(((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.d) || '')));\n  if (!path.length) return [0, 0, 0, 0];\n  var bounds = [Infinity, Infinity, -Infinity, -Infinity];\n  for (var i = 0, l = path.length; i < l; i += 1) {\n    var points = path[i].slice(1);\n    for (var j = 0; j < points.length; j += 2) {\n      if (points[j + 0] < bounds[0]) bounds[0] = points[j + 0];\n      if (points[j + 1] < bounds[1]) bounds[1] = points[j + 1];\n      if (points[j + 0] > bounds[2]) bounds[2] = points[j + 0];\n      if (points[j + 1] > bounds[3]) bounds[3] = points[j + 1];\n    }\n  }\n  return bounds;\n};\nvar getCircleBoundingBox = function getCircleBoundingBox(node) {\n  var _node$props2, _node$props3, _node$props4;\n  var r = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.r) || 0;\n  var cx = ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.cx) || 0;\n  var cy = ((_node$props4 = node.props) === null || _node$props4 === void 0 ? void 0 : _node$props4.cy) || 0;\n  return [cx - r, cy - r, cx + r, cy + r];\n};\nvar getEllipseBoundingBox = function getEllipseBoundingBox(node) {\n  var _node$props5, _node$props6, _node$props7, _node$props8;\n  var cx = ((_node$props5 = node.props) === null || _node$props5 === void 0 ? void 0 : _node$props5.cx) || 0;\n  var cy = ((_node$props6 = node.props) === null || _node$props6 === void 0 ? void 0 : _node$props6.cy) || 0;\n  var rx = ((_node$props7 = node.props) === null || _node$props7 === void 0 ? void 0 : _node$props7.rx) || 0;\n  var ry = ((_node$props8 = node.props) === null || _node$props8 === void 0 ? void 0 : _node$props8.ry) || 0;\n  return [cx - rx, cy - ry, cx + rx, cy + ry];\n};\nvar getLineBoundingBox = function getLineBoundingBox(node) {\n  var _node$props9, _node$props10, _node$props11, _node$props12;\n  var x1 = ((_node$props9 = node.props) === null || _node$props9 === void 0 ? void 0 : _node$props9.x1) || 0;\n  var y1 = ((_node$props10 = node.props) === null || _node$props10 === void 0 ? void 0 : _node$props10.y1) || 0;\n  var x2 = ((_node$props11 = node.props) === null || _node$props11 === void 0 ? void 0 : _node$props11.x2) || 0;\n  var y2 = ((_node$props12 = node.props) === null || _node$props12 === void 0 ? void 0 : _node$props12.y2) || 0;\n  return [Math.min(x1, x2), Math.min(y1, y2), Math.max(x1, x2), Math.max(y1, y2)];\n};\nvar getRectBoundingBox = function getRectBoundingBox(node) {\n  var _node$props13, _node$props14, _node$props15, _node$props16;\n  var x = ((_node$props13 = node.props) === null || _node$props13 === void 0 ? void 0 : _node$props13.x) || 0;\n  var y = ((_node$props14 = node.props) === null || _node$props14 === void 0 ? void 0 : _node$props14.y) || 0;\n  var width = ((_node$props15 = node.props) === null || _node$props15 === void 0 ? void 0 : _node$props15.width) || 0;\n  var height = ((_node$props16 = node.props) === null || _node$props16 === void 0 ? void 0 : _node$props16.height) || 0;\n  return [x, y, x + width, y + height];\n};\nvar max = function max(values) {\n  return Math.max.apply(Math, [-Infinity].concat(values));\n};\nvar min = function min(values) {\n  return Math.min.apply(Math, [Infinity].concat(values));\n};\nvar getPolylineBoundingBox = function getPolylineBoundingBox(node) {\n  var _node$props17;\n  var points = parsePoints(((_node$props17 = node.props) === null || _node$props17 === void 0 ? void 0 : _node$props17.points) || []);\n  var xValues = points.map(function (p) {\n    return p[0];\n  });\n  var yValues = points.map(function (p) {\n    return p[1];\n  });\n  return [min(xValues), min(yValues), max(xValues), max(yValues)];\n};\nvar boundingBoxFns = (_boundingBoxFns = {}, _boundingBoxFns[P.Rect] = getRectBoundingBox, _boundingBoxFns[P.Line] = getLineBoundingBox, _boundingBoxFns[P.Path] = getPathBoundingBox, _boundingBoxFns[P.Circle] = getCircleBoundingBox, _boundingBoxFns[P.Ellipse] = getEllipseBoundingBox, _boundingBoxFns[P.Polygon] = getPolylineBoundingBox, _boundingBoxFns[P.Polyline] = getPolylineBoundingBox, _boundingBoxFns);\nvar getBoundingBox = function getBoundingBox(node) {\n  var boundingBoxFn = boundingBoxFns[node.type];\n  return boundingBoxFn ? boundingBoxFn(node) : [0, 0, 0, 0];\n};\nvar _renderFns$1;\nvar setStrokeWidth = function setStrokeWidth(ctx, node) {\n  var _node$props;\n  var lineWidth = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.strokeWidth) || 0;\n  if (lineWidth) ctx.lineWidth(lineWidth);\n};\nvar setStrokeColor = function setStrokeColor(ctx, node) {\n  var _node$props2;\n  var strokeColor = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.stroke) || null;\n  if (strokeColor) ctx.strokeColor(strokeColor);\n};\nvar setOpacity = function setOpacity(ctx, node) {\n  var _node$props3;\n  var opacity = ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.opacity) || null;\n  if (!isNil(opacity)) ctx.opacity(opacity);\n};\nvar setFillOpacity = function setFillOpacity(ctx, node) {\n  var _node$props4;\n  var fillOpacity = ((_node$props4 = node.props) === null || _node$props4 === void 0 ? void 0 : _node$props4.fillOpacity) || null;\n  if (!isNil(fillOpacity)) ctx.fillOpacity(fillOpacity);\n};\nvar setStrokeOpacity = function setStrokeOpacity(ctx, node) {\n  var _node$props5;\n  var strokeOpacity = ((_node$props5 = node.props) === null || _node$props5 === void 0 ? void 0 : _node$props5.strokeOpacity) || null;\n  if (!isNil(strokeOpacity)) ctx.strokeOpacity(strokeOpacity);\n};\nvar setLineJoin = function setLineJoin(ctx, node) {\n  var _node$props6;\n  var lineJoin = ((_node$props6 = node.props) === null || _node$props6 === void 0 ? void 0 : _node$props6.strokeLinejoin) || null;\n  if (lineJoin) ctx.lineJoin(lineJoin);\n};\nvar setLineCap = function setLineCap(ctx, node) {\n  var _node$props7;\n  var lineCap = ((_node$props7 = node.props) === null || _node$props7 === void 0 ? void 0 : _node$props7.strokeLinecap) || null;\n  if (lineCap) ctx.lineCap(lineCap);\n};\nvar setLineDash = function setLineDash(ctx, node) {\n  var _node$props8;\n  var value = ((_node$props8 = node.props) === null || _node$props8 === void 0 ? void 0 : _node$props8.strokeDasharray) || null;\n  if (value) ctx.dash(value.split(','));\n};\nvar hasLinearGradientFill = function hasLinearGradientFill(node) {\n  var _node$props9, _node$props9$fill;\n  return ((_node$props9 = node.props) === null || _node$props9 === void 0 ? void 0 : (_node$props9$fill = _node$props9.fill) === null || _node$props9$fill === void 0 ? void 0 : _node$props9$fill.type) === P.LinearGradient;\n};\nvar hasRadialGradientFill = function hasRadialGradientFill(node) {\n  var _node$props10, _node$props10$fill;\n  return ((_node$props10 = node.props) === null || _node$props10 === void 0 ? void 0 : (_node$props10$fill = _node$props10.fill) === null || _node$props10$fill === void 0 ? void 0 : _node$props10$fill.type) === P.RadialGradient;\n}; // Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L104\n\nvar setLinearGradientFill = function setLinearGradientFill(ctx, node) {\n  var _node$props11;\n  var bbox = getBoundingBox(node);\n  var gradient = ((_node$props11 = node.props) === null || _node$props11 === void 0 ? void 0 : _node$props11.fill) || null;\n  var x1 = gradient.props.x1 || 0;\n  var y1 = gradient.props.y1 || 0;\n  var x2 = gradient.props.x2 || 1;\n  var y2 = gradient.props.y2 || 0;\n  var m0 = bbox[2] - bbox[0];\n  var m3 = bbox[3] - bbox[1];\n  var m4 = bbox[0];\n  var m5 = bbox[1];\n  var gx1 = m0 * x1 + m4;\n  var gy1 = m3 * y1 + m5;\n  var gx2 = m0 * x2 + m4;\n  var gy2 = m3 * y2 + m5;\n  var grad = ctx.linearGradient(gx1, gy1, gx2, gy2);\n  gradient.children.forEach(function (stop) {\n    grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n  });\n  ctx.fill(grad);\n}; // Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L155\n\nvar setRadialGradientFill = function setRadialGradientFill(ctx, node) {\n  var _node$props12;\n  var bbox = getBoundingBox(node);\n  var gradient = ((_node$props12 = node.props) === null || _node$props12 === void 0 ? void 0 : _node$props12.fill) || null;\n  var cx = gradient.props.cx || 0.5;\n  var cy = gradient.props.cy || 0.5;\n  var fx = gradient.props.fx || cx;\n  var fy = gradient.props.fy || cy;\n  var r = gradient.props.r || 0.5;\n  var m0 = bbox[2] - bbox[0];\n  var m3 = bbox[3] - bbox[1];\n  var m4 = bbox[0];\n  var m5 = bbox[1];\n  var gr = r * m0;\n  var gcx = m0 * cx + m4;\n  var gcy = m3 * cy + m5;\n  var gfx = m0 * fx + m4;\n  var gfy = m3 * fy + m5;\n  var grad = ctx.radialGradient(gfx, gfy, 0, gcx, gcy, gr);\n  gradient.children.forEach(function (stop) {\n    grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n  });\n  ctx.fill(grad);\n};\nvar setFillColor = function setFillColor(ctx, node) {\n  var _node$props13;\n  var fillColor = ((_node$props13 = node.props) === null || _node$props13 === void 0 ? void 0 : _node$props13.fill) || null;\n  if (fillColor) ctx.fillColor(fillColor);\n};\nvar setFill = function setFill(ctx, node) {\n  if (hasLinearGradientFill(node)) return setLinearGradientFill(ctx, node);\n  if (hasRadialGradientFill(node)) return setRadialGradientFill(ctx, node);\n  return setFillColor(ctx, node);\n};\nvar draw = function draw(ctx, node) {\n  var props = node.props || {};\n  if (props.fill && props.stroke) {\n    ctx.fillAndStroke(props.fillRule);\n  } else if (props.fill) {\n    ctx.fill(props.fillRule);\n  } else if (props.stroke) {\n    ctx.stroke();\n  } else {\n    ctx.save();\n    ctx.opacity(0);\n    ctx.fill(null);\n    ctx.restore();\n  }\n};\nvar noop = function noop() {};\nvar renderFns$1 = (_renderFns$1 = {}, _renderFns$1[P.Tspan] = noop, _renderFns$1[P.TextInstance] = noop, _renderFns$1[P.Path] = renderPath, _renderFns$1[P.Rect] = renderRect, _renderFns$1[P.Line] = renderLine$1, _renderFns$1[P.G] = renderGroup, _renderFns$1[P.Text] = renderSvgText, _renderFns$1[P.Circle] = renderCircle, _renderFns$1[P.Image] = renderImage$1, _renderFns$1[P.Ellipse] = renderEllipse, _renderFns$1[P.Polygon] = renderPolygon, _renderFns$1[P.Polyline] = renderPolyline, _renderFns$1);\nvar renderNode$1 = function renderNode(ctx, node) {\n  var renderFn = renderFns$1[node.type];\n  if (renderFns$1) {\n    renderFn(ctx, node);\n  } else {\n    console.warn(\"SVG node of type \" + node.type + \" is not currenty supported\");\n  }\n};\nvar drawNode = function drawNode(ctx, node) {\n  setLineCap(ctx, node);\n  setLineDash(ctx, node);\n  setLineJoin(ctx, node);\n  setStrokeWidth(ctx, node);\n  setStrokeColor(ctx, node);\n  setFill(ctx, node);\n  setStrokeOpacity(ctx, node);\n  setFillOpacity(ctx, node);\n  setOpacity(ctx, node);\n  applyTransformations(ctx, node);\n  renderNode$1(ctx, node);\n  draw(ctx, node);\n};\nvar clipPath = function clipPath(ctx, node) {\n  var _node$props14;\n  var value = (_node$props14 = node.props) === null || _node$props14 === void 0 ? void 0 : _node$props14.clipPath;\n  if (value) {\n    var children = value.children || [];\n    children.forEach(function (child) {\n      return renderNode$1(ctx, child);\n    });\n    ctx.clip();\n  }\n};\nvar drawChildren = function drawChildren(ctx, node) {\n  var children = node.children || [];\n  children.forEach(function (child) {\n    ctx.save();\n    clipPath(ctx, child);\n    drawNode(ctx, child);\n    drawChildren(ctx, child);\n    ctx.restore();\n  });\n};\nvar resolveAspectRatio = function resolveAspectRatio(ctx, node) {\n  var _node$box = node.box,\n    width = _node$box.width,\n    height = _node$box.height;\n  var _node$props15 = node.props,\n    viewBox = _node$props15.viewBox,\n    _node$props15$preserv = _node$props15.preserveAspectRatio,\n    preserveAspectRatio = _node$props15$preserv === void 0 ? {} : _node$props15$preserv;\n  var _preserveAspectRatio$ = preserveAspectRatio.meetOrSlice,\n    meetOrSlice = _preserveAspectRatio$ === void 0 ? 'meet' : _preserveAspectRatio$,\n    _preserveAspectRatio$2 = preserveAspectRatio.align,\n    align = _preserveAspectRatio$2 === void 0 ? 'xMidYMid' : _preserveAspectRatio$2;\n  if (viewBox == null || width == null || height == null) return;\n  var x = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.minX) || 0;\n  var y = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.minY) || 0;\n  var logicalWidth = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.maxX) || width;\n  var logicalHeight = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.maxY) || height;\n  var logicalRatio = logicalWidth / logicalHeight;\n  var physicalRatio = width / height;\n  var scaleX = width / logicalWidth;\n  var scaleY = height / logicalHeight;\n  if (align === 'none') {\n    ctx.scale(scaleX, scaleY);\n    ctx.translate(-x, -y);\n    return;\n  }\n  if (logicalRatio < physicalRatio && meetOrSlice === 'meet' || logicalRatio >= physicalRatio && meetOrSlice === 'slice') {\n    ctx.scale(scaleY, scaleY);\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMinYMid':\n      case 'xMinYMax':\n        ctx.translate(-x, -y);\n        break;\n      case 'xMidYMin':\n      case 'xMidYMid':\n      case 'xMidYMax':\n        ctx.translate(-x - (logicalWidth - width * logicalHeight / height) / 2, -y);\n        break;\n      default:\n        ctx.translate(-x - (logicalWidth - width * logicalHeight / height), -y);\n    }\n  } else {\n    ctx.scale(scaleX, scaleX);\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMidYMin':\n      case 'xMaxYMin':\n        ctx.translate(-x, -y);\n        break;\n      case 'xMinYMid':\n      case 'xMidYMid':\n      case 'xMaxYMid':\n        ctx.translate(-x, -y - (logicalHeight - height * logicalWidth / width) / 2);\n        break;\n      default:\n        ctx.translate(-x, -y - (logicalHeight - height * logicalWidth / width));\n    }\n  }\n};\nvar moveToOrigin = function moveToOrigin(ctx, node) {\n  var _node$box2 = node.box,\n    top = _node$box2.top,\n    left = _node$box2.left;\n  var paddingLeft = node.box.paddingLeft || 0;\n  var paddingTop = node.box.paddingTop || 0;\n  ctx.translate(left + paddingLeft, top + paddingTop);\n};\nvar renderSvg = function renderSvg(ctx, node) {\n  ctx.save();\n  clipNode(ctx, node);\n  moveToOrigin(ctx, node);\n  resolveAspectRatio(ctx, node);\n  drawChildren(ctx, node);\n  ctx.restore();\n};\nvar parseColor = function parseColor(hex) {\n  var parsed = colorString.get(hex);\n  var value = colorString.to.hex(parsed.value.slice(0, 3));\n  var opacity = parsed.value[3];\n  return {\n    value: value,\n    opacity: opacity\n  };\n};\n\n/* eslint-disable no-param-reassign */\nvar DEST_REGEXP = /^#.+/;\nvar isSrcId$1 = function isSrcId(src) {\n  return src.match(DEST_REGEXP);\n};\nvar renderAttachment = function renderAttachment(ctx, attachment) {\n  var _attachment$xOffset = attachment.xOffset,\n    xOffset = _attachment$xOffset === void 0 ? 0 : _attachment$xOffset,\n    _attachment$yOffset = attachment.yOffset,\n    yOffset = _attachment$yOffset === void 0 ? 0 : _attachment$yOffset,\n    width = attachment.width,\n    height = attachment.height,\n    image = attachment.image;\n  ctx.translate(-width + xOffset, -height + yOffset);\n  ctx.image(image, 0, 0, {\n    fit: [width, height],\n    align: 'center',\n    valign: 'bottom'\n  });\n};\nvar renderAttachments = function renderAttachments(ctx, run) {\n  ctx.save();\n  var font = run.attributes.font;\n  var space = font.glyphForCodePoint(0x20);\n  var objectReplacement = font.glyphForCodePoint(0xfffc);\n  var attachmentAdvance = 0;\n  for (var i = 0; i < run.glyphs.length; i += 1) {\n    var position = run.positions[i];\n    var glyph = run.glyphs[i];\n    attachmentAdvance += position.xAdvance || 0;\n    if (glyph.id === objectReplacement.id && run.attributes.attachment) {\n      ctx.translate(attachmentAdvance, position.yOffset || 0);\n      renderAttachment(ctx, run.attributes.attachment);\n      run.glyphs[i] = space;\n      attachmentAdvance = 0;\n    }\n  }\n  ctx.restore();\n};\nvar renderRun = function renderRun(ctx, run, options) {\n  var _run$attributes = run.attributes,\n    font = _run$attributes.font,\n    fontSize = _run$attributes.fontSize,\n    link = _run$attributes.link;\n  var color = parseColor(run.attributes.color);\n  var opacity = isNil(run.attributes.opacity) ? color.opacity : run.attributes.opacity;\n  var height = run.height,\n    descent = run.descent,\n    xAdvance = run.xAdvance;\n  if (options.outlineRuns) {\n    ctx.rect(0, -height, xAdvance, height).stroke();\n  }\n  ctx.fillColor(color.value);\n  ctx.fillOpacity(opacity);\n  if (link) {\n    if (isSrcId$1(link)) {\n      ctx.goTo(0, -height - descent, xAdvance, height, link.slice(1));\n    } else {\n      ctx.link(0, -height - descent, xAdvance, height, link);\n    }\n  }\n  renderAttachments(ctx, run);\n  if (font.sbix || font.COLR && font.CPAL) {\n    ctx.save();\n    ctx.translate(0, -run.ascent);\n    for (var i = 0; i < run.glyphs.length; i += 1) {\n      var position = run.positions[i];\n      var glyph = run.glyphs[i];\n      ctx.save();\n      ctx.translate(position.xOffset, position.yOffset);\n      glyph.render(ctx, fontSize);\n      ctx.restore();\n      ctx.translate(position.xAdvance, position.yAdvance);\n    }\n    ctx.restore();\n  } else {\n    ctx.font(typeof font.name === 'string' ? font.name : font, fontSize);\n    try {\n      renderGlyphs(ctx, run.glyphs, run.positions, 0, 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  ctx.translate(xAdvance, 0);\n};\nvar renderBackground$1 = function renderBackground(ctx, rect, backgroundColor) {\n  var color = parseColor(backgroundColor);\n  ctx.save();\n  ctx.fillOpacity(color.opacity);\n  ctx.rect(rect.x, rect.y, rect.width, rect.height);\n  ctx.fill(color.value);\n  ctx.restore();\n};\nvar renderDecorationLine = function renderDecorationLine(ctx, line) {\n  ctx.save();\n  ctx.lineWidth(line.rect.height);\n  ctx.strokeOpacity(line.opacity);\n  if (/dashed/.test(line.style)) {\n    ctx.dash(3 * line.rect.height);\n  } else if (/dotted/.test(line.style)) {\n    ctx.dash(line.rect.height);\n  }\n  if (/wavy/.test(line.style)) {\n    var dist = Math.max(2, line.rect.height);\n    var step = 1.1 * dist;\n    var stepCount = Math.floor(line.rect.width / (2 * step)); // Adjust step to fill entire width\n\n    var remainingWidth = line.rect.width - stepCount * 2 * step;\n    var adjustment = remainingWidth / stepCount / 2;\n    step += adjustment;\n    var cp1y = line.rect.y + dist;\n    var cp2y = line.rect.y - dist;\n    var x = line.rect.x;\n    ctx.moveTo(line.rect.x, line.rect.y);\n    for (var i = 0; i < stepCount; i += 1) {\n      ctx.bezierCurveTo(x + step, cp1y, x + step, cp2y, x + 2 * step, line.rect.y);\n      x += 2 * step;\n    }\n  } else {\n    ctx.moveTo(line.rect.x, line.rect.y);\n    ctx.lineTo(line.rect.x + line.rect.width, line.rect.y);\n    if (/double/.test(line.style)) {\n      ctx.moveTo(line.rect.x, line.rect.y + line.rect.height * 2);\n      ctx.lineTo(line.rect.x + line.rect.width, line.rect.y + line.rect.height * 2);\n    }\n  }\n  ctx.stroke(line.color);\n  ctx.restore();\n};\nvar renderLine = function renderLine(ctx, line, options) {\n  var lineAscent = line.ascent;\n  if (options.outlineLines) {\n    ctx.rect(line.box.x, line.box.y, line.box.width, line.box.height).stroke();\n  }\n  ctx.save();\n  ctx.translate(line.box.x, line.box.y + lineAscent);\n  for (var i = 0; i < line.runs.length; i += 1) {\n    var run = line.runs[i];\n    var isLastRun = i === line.runs.length - 1;\n    if (run.attributes.backgroundColor) {\n      var overflowRight = isLastRun ? line.overflowRight : 0;\n      var backgroundRect = {\n        x: 0,\n        y: -lineAscent,\n        height: line.box.height,\n        width: run.xAdvance - overflowRight\n      };\n      renderBackground$1(ctx, backgroundRect, run.attributes.backgroundColor);\n    }\n    renderRun(ctx, run, options);\n  }\n  ctx.restore();\n  ctx.save();\n  ctx.translate(line.box.x, line.box.y);\n  for (var _i = 0; _i < line.decorationLines.length; _i += 1) {\n    var decorationLine = line.decorationLines[_i];\n    renderDecorationLine(ctx, decorationLine);\n  }\n  ctx.restore();\n};\nvar renderBlock = function renderBlock(ctx, block, options) {\n  block.forEach(function (line) {\n    renderLine(ctx, line, options);\n  });\n};\nvar renderText = function renderText(ctx, node) {\n  var _node$box2, _node$box3;\n  var _node$box = node.box,\n    top = _node$box.top,\n    left = _node$box.left;\n  var blocks = [node.lines];\n  var paddingTop = ((_node$box2 = node.box) === null || _node$box2 === void 0 ? void 0 : _node$box2.paddingTop) || 0;\n  var paddingLeft = ((_node$box3 = node.box) === null || _node$box3 === void 0 ? void 0 : _node$box3.paddingLeft) || 0;\n  var initialY = node.lines[0] ? node.lines[0].box.y : 0;\n  var offsetX = node.alignOffset || 0;\n  ctx.save();\n  ctx.translate(left + paddingLeft - offsetX, top + paddingTop - initialY);\n  blocks.forEach(function (block) {\n    renderBlock(ctx, block, {});\n  });\n  ctx.restore();\n};\nvar renderPage = function renderPage(ctx, node) {\n  var _node$props;\n  var _node$box = node.box,\n    width = _node$box.width,\n    height = _node$box.height;\n  var dpi = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.dpi) || 72;\n  var userUnit = dpi / 72;\n  ctx.addPage({\n    size: [width, height],\n    margin: 0,\n    userUnit: userUnit\n  });\n};\nvar renderNote = function renderNote(ctx, node) {\n  var _node$children, _node$style, _node$style2;\n  var _node$box = node.box,\n    top = _node$box.top,\n    left = _node$box.left;\n  var value = (node === null || node === void 0 ? void 0 : (_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children[0].value) || '';\n  var color = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.backgroundColor) || null;\n  var borderWidth = ((_node$style2 = node.style) === null || _node$style2 === void 0 ? void 0 : _node$style2.borderWidth) || null;\n  ctx.note(left, top, 0, 0, value, {\n    color: color,\n    borderWidth: borderWidth\n  });\n};\nvar isNumeric = function isNumeric(n) {\n  return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n};\nvar applyContainObjectFit = function applyContainObjectFit(cw, ch, iw, ih, px, py) {\n  var cr = cw / ch;\n  var ir = iw / ih;\n  var pxp = matchPercent(px);\n  var pyp = matchPercent(py);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n  if (cr > ir) {\n    var _height = ch;\n    var _width = _height * ir;\n    var _yOffset = isNumeric(py) ? py : 0;\n    var _xOffset = isNumeric(px) ? px : (cw - _width) * pxv;\n    return {\n      width: _width,\n      height: _height,\n      xOffset: _xOffset,\n      yOffset: _yOffset\n    };\n  }\n  var width = cw;\n  var height = width / ir;\n  var xOffset = isNumeric(px) ? px : 0;\n  var yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n  return {\n    width: width,\n    height: height,\n    yOffset: yOffset,\n    xOffset: xOffset\n  };\n};\nvar applyNoneObjectFit = function applyNoneObjectFit(cw, ch, iw, ih, px, py) {\n  var width = iw;\n  var height = ih;\n  var pxp = matchPercent(px);\n  var pyp = matchPercent(py);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n  var xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  var yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n  return {\n    width: width,\n    height: height,\n    xOffset: xOffset,\n    yOffset: yOffset\n  };\n};\nvar applyCoverObjectFit = function applyCoverObjectFit(cw, ch, iw, ih, px, py) {\n  var ir = iw / ih;\n  var cr = cw / ch;\n  var pxp = matchPercent(px);\n  var pyp = matchPercent(py);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n  if (cr > ir) {\n    var _width2 = cw;\n    var _height2 = _width2 / ir;\n    var _xOffset2 = isNumeric(px) ? px : 0;\n    var _yOffset2 = isNumeric(py) ? py : (ch - _height2) * pyv;\n    return {\n      width: _width2,\n      height: _height2,\n      yOffset: _yOffset2,\n      xOffset: _xOffset2\n    };\n  }\n  var height = ch;\n  var width = height * ir;\n  var xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  var yOffset = isNumeric(py) ? py : 0;\n  return {\n    width: width,\n    height: height,\n    xOffset: xOffset,\n    yOffset: yOffset\n  };\n};\nvar applyScaleDownObjectFit = function applyScaleDownObjectFit(cw, ch, iw, ih, px, py) {\n  var containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  var noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n  return containDimension.width < noneDimension.width ? containDimension : noneDimension;\n};\nvar applyFillObjectFit = function applyFillObjectFit(cw, ch, px, py) {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px) ? 0 : px || 0,\n    yOffset: matchPercent(py) ? 0 : py || 0\n  };\n};\nvar resolveObjectFit = function resolveObjectFit(type, cw, ch, iw, ih, px, py) {\n  if (type === void 0) {\n    type = 'fill';\n  }\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\nvar drawImage = function drawImage(ctx, node, options) {\n  var _node$style, _node$style2, _node$style3, _node$style4;\n  if (options === void 0) {\n    options = {};\n  }\n  var _node$box = node.box,\n    left = _node$box.left,\n    top = _node$box.top;\n  var opacity = (_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.opacity;\n  var objectFit = (_node$style2 = node.style) === null || _node$style2 === void 0 ? void 0 : _node$style2.objectFit;\n  var objectPositionX = (_node$style3 = node.style) === null || _node$style3 === void 0 ? void 0 : _node$style3.objectPositionX;\n  var objectPositionY = (_node$style4 = node.style) === null || _node$style4 === void 0 ? void 0 : _node$style4.objectPositionY;\n  var paddingTop = node.box.paddingTop || 0;\n  var paddingRight = node.box.paddingRight || 0;\n  var paddingBottom = node.box.paddingBottom || 0;\n  var paddingLeft = node.box.paddingLeft || 0;\n  var imageCache = options.imageCache || new Map();\n  var _resolveObjectFit = resolveObjectFit(objectFit, node.box.width - paddingLeft - paddingRight, node.box.height - paddingTop - paddingBottom, node.image.width, node.image.height, objectPositionX, objectPositionY),\n    width = _resolveObjectFit.width,\n    height = _resolveObjectFit.height,\n    xOffset = _resolveObjectFit.xOffset,\n    yOffset = _resolveObjectFit.yOffset;\n  if (node.image.data) {\n    if (width !== 0 && height !== 0) {\n      var cacheKey = node.image.key;\n      var image = imageCache.get(cacheKey) || ctx.embedImage(node.image.data);\n      if (cacheKey) imageCache.set(cacheKey, image);\n      var imageOpacity = isNil(opacity) ? 1 : opacity;\n      ctx.fillOpacity(imageOpacity).image(image, left + paddingLeft + xOffset, top + paddingTop + yOffset, {\n        width: width,\n        height: height\n      });\n    } else {\n      console.warn(\"Image with src '\" + JSON.stringify(node.props.src) + \"' skipped due to invalid dimensions\");\n    }\n  }\n};\nvar renderImage = function renderImage(ctx, node, options) {\n  ctx.save();\n  clipNode(ctx, node);\n  drawImage(ctx, node, options);\n  ctx.restore();\n};\nvar CONTENT_COLOR = '#a1c6e7';\nvar PADDING_COLOR = '#c4deb9';\nvar MARGIN_COLOR = '#f8cca1'; // TODO: Draw debug boxes using clipping to enhance quality\n\nvar debugContent = function debugContent(ctx, node) {\n  var _node$box = node.box,\n    left = _node$box.left,\n    top = _node$box.top,\n    width = _node$box.width,\n    height = _node$box.height,\n    _node$box$paddingLeft = _node$box.paddingLeft,\n    paddingLeft = _node$box$paddingLeft === void 0 ? 0 : _node$box$paddingLeft,\n    _node$box$paddingTop = _node$box.paddingTop,\n    paddingTop = _node$box$paddingTop === void 0 ? 0 : _node$box$paddingTop,\n    _node$box$paddingRigh = _node$box.paddingRight,\n    paddingRight = _node$box$paddingRigh === void 0 ? 0 : _node$box$paddingRigh,\n    _node$box$paddingBott = _node$box.paddingBottom,\n    paddingBottom = _node$box$paddingBott === void 0 ? 0 : _node$box$paddingBott,\n    _node$box$borderLeftW = _node$box.borderLeftWidth,\n    borderLeftWidth = _node$box$borderLeftW === void 0 ? 0 : _node$box$borderLeftW,\n    _node$box$borderTopWi = _node$box.borderTopWidth,\n    borderTopWidth = _node$box$borderTopWi === void 0 ? 0 : _node$box$borderTopWi,\n    _node$box$borderRight = _node$box.borderRightWidth,\n    borderRightWidth = _node$box$borderRight === void 0 ? 0 : _node$box$borderRight,\n    _node$box$borderBotto = _node$box.borderBottomWidth,\n    borderBottomWidth = _node$box$borderBotto === void 0 ? 0 : _node$box$borderBotto;\n  ctx.fillColor(CONTENT_COLOR).opacity(0.5).rect(left + paddingLeft + borderLeftWidth, top + paddingTop + borderTopWidth, width - paddingLeft - paddingRight - borderRightWidth - borderLeftWidth, height - paddingTop - paddingBottom - borderTopWidth - borderBottomWidth).fill();\n};\nvar debugPadding = function debugPadding(ctx, node) {\n  var _node$box2 = node.box,\n    left = _node$box2.left,\n    top = _node$box2.top,\n    width = _node$box2.width,\n    height = _node$box2.height,\n    _node$box2$paddingLef = _node$box2.paddingLeft,\n    paddingLeft = _node$box2$paddingLef === void 0 ? 0 : _node$box2$paddingLef,\n    _node$box2$paddingTop = _node$box2.paddingTop,\n    paddingTop = _node$box2$paddingTop === void 0 ? 0 : _node$box2$paddingTop,\n    _node$box2$paddingRig = _node$box2.paddingRight,\n    paddingRight = _node$box2$paddingRig === void 0 ? 0 : _node$box2$paddingRig,\n    _node$box2$paddingBot = _node$box2.paddingBottom,\n    paddingBottom = _node$box2$paddingBot === void 0 ? 0 : _node$box2$paddingBot,\n    _node$box2$borderLeft = _node$box2.borderLeftWidth,\n    borderLeftWidth = _node$box2$borderLeft === void 0 ? 0 : _node$box2$borderLeft,\n    _node$box2$borderTopW = _node$box2.borderTopWidth,\n    borderTopWidth = _node$box2$borderTopW === void 0 ? 0 : _node$box2$borderTopW,\n    _node$box2$borderRigh = _node$box2.borderRightWidth,\n    borderRightWidth = _node$box2$borderRigh === void 0 ? 0 : _node$box2$borderRigh,\n    _node$box2$borderBott = _node$box2.borderBottomWidth,\n    borderBottomWidth = _node$box2$borderBott === void 0 ? 0 : _node$box2$borderBott;\n  ctx.fillColor(PADDING_COLOR).opacity(0.5); // Padding top\n\n  ctx.rect(left + paddingLeft + borderLeftWidth, top + borderTopWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingTop).fill(); // Padding left\n\n  ctx.rect(left + borderLeftWidth, top + borderTopWidth, paddingLeft, height - borderTopWidth - borderBottomWidth).fill(); // Padding right\n\n  ctx.rect(left + width - paddingRight - borderRightWidth, top + borderTopWidth, paddingRight, height - borderTopWidth - borderBottomWidth).fill(); // Padding bottom\n\n  ctx.rect(left + paddingLeft + borderLeftWidth, top + height - paddingBottom - borderBottomWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingBottom).fill();\n};\nvar getMargin = function getMargin(box) {\n  var marginLeft = box.marginLeft === 'auto' ? 0 : box.marginLeft;\n  var marginTop = box.marginTop === 'auto' ? 0 : box.marginTop;\n  var marginRight = box.marginRight === 'auto' ? 0 : box.marginRight;\n  var marginBottom = box.marginBottom === 'auto' ? 0 : box.marginBottom;\n  return {\n    marginLeft: marginLeft,\n    marginTop: marginTop,\n    marginRight: marginRight,\n    marginBottom: marginBottom\n  };\n};\nvar debugMargin = function debugMargin(ctx, node) {\n  var _node$box3 = node.box,\n    left = _node$box3.left,\n    top = _node$box3.top,\n    width = _node$box3.width,\n    height = _node$box3.height;\n  var _getMargin = getMargin(node.box),\n    _getMargin$marginLeft = _getMargin.marginLeft,\n    marginLeft = _getMargin$marginLeft === void 0 ? 0 : _getMargin$marginLeft,\n    _getMargin$marginTop = _getMargin.marginTop,\n    marginTop = _getMargin$marginTop === void 0 ? 0 : _getMargin$marginTop,\n    _getMargin$marginRigh = _getMargin.marginRight,\n    marginRight = _getMargin$marginRigh === void 0 ? 0 : _getMargin$marginRigh,\n    _getMargin$marginBott = _getMargin.marginBottom,\n    marginBottom = _getMargin$marginBott === void 0 ? 0 : _getMargin$marginBott;\n  ctx.fillColor(MARGIN_COLOR).opacity(0.5); // Margin top\n\n  ctx.rect(left, top - marginTop, width, marginTop).fill(); // Margin left\n\n  ctx.rect(left - marginLeft, top - marginTop, marginLeft, height + marginTop + marginBottom).fill(); // Margin right\n\n  ctx.rect(left + width, top - marginTop, marginRight, height + marginTop + marginBottom).fill(); // Margin bottom\n\n  ctx.rect(left, top + height, width, marginBottom).fill();\n};\nvar debugText = function debugText(ctx, node) {\n  var _node$box4 = node.box,\n    left = _node$box4.left,\n    top = _node$box4.top,\n    width = _node$box4.width,\n    height = _node$box4.height;\n  var _getMargin2 = getMargin(node.box),\n    _getMargin2$marginLef = _getMargin2.marginLeft,\n    marginLeft = _getMargin2$marginLef === void 0 ? 0 : _getMargin2$marginLef,\n    _getMargin2$marginTop = _getMargin2.marginTop,\n    marginTop = _getMargin2$marginTop === void 0 ? 0 : _getMargin2$marginTop,\n    _getMargin2$marginRig = _getMargin2.marginRight,\n    marginRight = _getMargin2$marginRig === void 0 ? 0 : _getMargin2$marginRig,\n    _getMargin2$marginBot = _getMargin2.marginBottom,\n    marginBottom = _getMargin2$marginBot === void 0 ? 0 : _getMargin2$marginBot;\n  var roundedWidth = Math.round(width + marginLeft + marginRight);\n  var roundedHeight = Math.round(height + marginTop + marginBottom);\n  ctx.fontSize(6).opacity(1).fillColor('black').text(roundedWidth + \" x \" + roundedHeight, left - marginLeft, Math.max(top - marginTop - 4, 1));\n};\nvar debugOrigin = function debugOrigin(ctx, node) {\n  if (node.origin) {\n    ctx.circle(node.origin.left, node.origin.top, 3).fill('red').circle(node.origin.left, node.origin.top, 5).stroke('red');\n  }\n};\nvar renderDebug = function renderDebug(ctx, node) {\n  var _node$props;\n  if (!((_node$props = node.props) !== null && _node$props !== void 0 && _node$props.debug)) return;\n  ctx.save();\n  debugContent(ctx, node);\n  debugPadding(ctx, node);\n  debugMargin(ctx, node);\n  debugText(ctx, node);\n  debugOrigin(ctx, node);\n  ctx.restore();\n};\nvar availableMethods = ['dash', 'clip', 'save', 'path', 'fill', 'font', 'text', 'rect', 'scale', 'moveTo', 'lineTo', 'stroke', 'rotate', 'circle', 'lineCap', 'opacity', 'ellipse', 'polygon', 'restore', 'lineJoin', 'fontSize', 'fillColor', 'lineWidth', 'translate', 'miterLimit', 'strokeColor', 'fillOpacity', 'roundedRect', 'fillAndStroke', 'strokeOpacity', 'bezierCurveTo', 'quadraticCurveTo', 'linearGradient', 'radialGradient'];\nvar painter = function painter(ctx) {\n  var p = availableMethods.reduce(function (acc, prop) {\n    var _extends2;\n    return _extends({}, acc, (_extends2 = {}, _extends2[prop] = function () {\n      ctx[prop].apply(ctx, arguments);\n      return p;\n    }, _extends2));\n  }, {});\n  return p;\n};\nvar renderCanvas = function renderCanvas(ctx, node) {\n  var _node$box = node.box,\n    top = _node$box.top,\n    left = _node$box.left,\n    width = _node$box.width,\n    height = _node$box.height;\n  var paddingTop = node.box.paddingTop || 0;\n  var paddingLeft = node.box.paddingLeft || 0;\n  var paddingRight = node.box.paddingRight || 0;\n  var paddingBottom = node.box.paddingBottom || 0;\n  var availableWidth = width - paddingLeft - paddingRight;\n  var availableHeight = height - paddingTop - paddingBottom;\n  if (!availableWidth || !availableHeight) {\n    console.warn('Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.');\n  }\n  ctx.save().translate(left + paddingLeft, top + paddingTop);\n  if (node.props.paint) {\n    node.props.paint(painter(ctx), availableWidth, availableHeight);\n  }\n  ctx.restore();\n};\n\n// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nvar KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nvar clipBorderTop = function clipBorderTop(ctx, layout, style, rtr, rtl) {\n  var top = layout.top,\n    left = layout.left,\n    width = layout.width,\n    height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n    borderRightWidth = style.borderRightWidth,\n    borderLeftWidth = style.borderLeftWidth; // Clip outer top border edge\n\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top); // Ellipse coefficients outer top right cap\n\n  var c0 = rtr * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + width - c0, top, left + width, top + c0, left + width, top + rtr); // Move down in case the margin exceedes the radius\n\n  var topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord); // Clip inner top right cap\n\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord); // Ellipse coefficients inner top right cap\n\n  var innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  var innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  var c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  var c2 = innerTopRightRadiusY * (1.0 - KAPPA); // Clip inner top right cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth, top + borderTopWidth + c2, left + width - borderRightWidth - c1, top + borderTopWidth, left + width - borderRightWidth - innerTopRightRadiusX, top + borderTopWidth); // Clip inner top border edge\n\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth); // Ellipse coefficients inner top left cap\n\n  var innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  var innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  var c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  var c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  var topLeftYCoord = top + Math.max(borderTopWidth, rtl); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth + c3, top + borderTopWidth, left + borderLeftWidth, top + borderTopWidth + c4, left + borderLeftWidth, topLeftYCoord);\n  ctx.lineTo(left, topLeftYCoord); // Move down in case the margin exceedes the radius\n\n  ctx.lineTo(left, top + rtl); // Ellipse coefficients outer top left cap\n\n  var c5 = rtl * (1.0 - KAPPA); // Clip outer top left cap\n\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip(); // Clip border top cap joins\n\n  if (borderRightWidth) {\n    var trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n  if (borderLeftWidth) {\n    var _trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, _trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\nvar fillBorderTop = function fillBorderTop(ctx, layout, style, rtr, rtl) {\n  var top = layout.top,\n    left = layout.left,\n    width = layout.width;\n  var borderTopColor = style.borderTopColor,\n    borderTopWidth = style.borderTopWidth,\n    borderTopStyle = style.borderTopStyle,\n    borderRightWidth = style.borderRightWidth,\n    borderLeftWidth = style.borderLeftWidth;\n  var c0 = rtl * (1.0 - KAPPA);\n  var c1 = rtr * (1.0 - KAPPA);\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - c1, top, left + width, top + c1, left + width, top + rtr);\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2);\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, {\n      space: borderTopWidth * 1.2\n    });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, {\n      space: borderTopWidth * 1.2\n    });\n  }\n  ctx.stroke();\n  ctx.undash();\n};\nvar clipBorderRight = function clipBorderRight(ctx, layout, style, rtr, rbr) {\n  var top = layout.top,\n    left = layout.left,\n    width = layout.width,\n    height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n    borderRightWidth = style.borderRightWidth,\n    borderBottomWidth = style.borderBottomWidth; // Clip outer right border edge\n\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr); // Ellipse coefficients outer bottom right cap\n\n  var c0 = rbr * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + width, top + height - c0, left + width - c0, top + height, left + width - rbr, top + height); // Move left in case the margin exceedes the radius\n\n  var topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height); // Clip inner bottom right cap\n\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth); // Ellipse coefficients inner bottom right cap\n\n  var innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  var innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  var c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  var c2 = innerBottomRightRadiusY * (1.0 - KAPPA); // Clip inner top right cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth - c1, top + height - borderBottomWidth, left + width - borderRightWidth, top + height - borderBottomWidth - c2, left + width - borderRightWidth, top + height - Math.max(rbr, borderBottomWidth)); // Clip inner right border edge\n\n  ctx.lineTo(left + width - borderRightWidth, top + Math.max(rtr, borderTopWidth)); // Ellipse coefficients inner top right cap\n\n  var innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  var innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  var c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  var c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  var topRightXCoord = left + width - Math.max(rtr, borderRightWidth); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth, top + borderTopWidth + c4, left + width - borderRightWidth - c3, top + borderTopWidth, topRightXCoord, top + borderTopWidth);\n  ctx.lineTo(topRightXCoord, top); // Move right in case the margin exceedes the radius\n\n  ctx.lineTo(left + width - rtr, top); // Ellipse coefficients outer top right cap\n\n  var c5 = rtr * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + width - c5, top, left + width, top + c5, left + width, top + rtr);\n  ctx.closePath();\n  ctx.clip(); // Clip border right cap joins\n\n  if (borderTopWidth) {\n    var trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n  if (borderBottomWidth) {\n    var brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\nvar fillBorderRight = function fillBorderRight(ctx, layout, style, rtr, rbr) {\n  var top = layout.top,\n    left = layout.left,\n    width = layout.width,\n    height = layout.height;\n  var borderRightColor = style.borderRightColor,\n    borderRightStyle = style.borderRightStyle,\n    borderRightWidth = style.borderRightWidth,\n    borderTopWidth = style.borderTopWidth,\n    borderBottomWidth = style.borderBottomWidth;\n  var c0 = rbr * (1.0 - KAPPA);\n  var c1 = rtr * (1.0 - KAPPA);\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - c1, top, left + width, top + c1, left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - c0, left + width - c0, top + height, left + width - rbr, top + height);\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2);\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, {\n      space: borderRightWidth * 1.2\n    });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, {\n      space: borderRightWidth * 1.2\n    });\n  }\n  ctx.stroke();\n  ctx.undash();\n};\nvar clipBorderBottom = function clipBorderBottom(ctx, layout, style, rbl, rbr) {\n  var top = layout.top,\n    left = layout.left,\n    width = layout.width,\n    height = layout.height;\n  var borderBottomWidth = style.borderBottomWidth,\n    borderRightWidth = style.borderRightWidth,\n    borderLeftWidth = style.borderLeftWidth; // Clip outer top border edge\n\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height); // Ellipse coefficients outer top right cap\n\n  var c0 = rbl * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl); // Move up in case the margin exceedes the radius\n\n  var bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord); // Clip inner bottom left cap\n\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord); // Ellipse coefficients inner top right cap\n\n  var innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  var innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  var c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  var c2 = innerBottomLeftRadiusY * (1.0 - KAPPA); // Clip inner bottom left cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth, top + height - borderBottomWidth - c2, left + borderLeftWidth + c1, top + height - borderBottomWidth, left + borderLeftWidth + innerBottomLeftRadiusX, top + height - borderBottomWidth); // Clip inner bottom border edge\n\n  ctx.lineTo(left + width - Math.max(rbr, borderRightWidth), top + height - borderBottomWidth); // Ellipse coefficients inner top left cap\n\n  var innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  var innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  var c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  var c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  var bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth - c3, top + height - borderBottomWidth, left + width - borderRightWidth, top + height - borderBottomWidth - c4, left + width - borderRightWidth, bottomRightYCoord);\n  ctx.lineTo(left + width, bottomRightYCoord); // Move down in case the margin exceedes the radius\n\n  ctx.lineTo(left + width, top + height - rbr); // Ellipse coefficients outer top left cap\n\n  var c5 = rbr * (1.0 - KAPPA); // Clip outer top left cap\n\n  ctx.bezierCurveTo(left + width, top + height - c5, left + width - c5, top + height, left + width - rbr, top + height);\n  ctx.closePath();\n  ctx.clip(); // Clip border bottom cap joins\n\n  if (borderRightWidth) {\n    var brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n  if (borderLeftWidth) {\n    var trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\nvar fillBorderBottom = function fillBorderBottom(ctx, layout, style, rbl, rbr) {\n  var top = layout.top,\n    left = layout.left,\n    width = layout.width,\n    height = layout.height;\n  var borderBottomColor = style.borderBottomColor,\n    borderBottomStyle = style.borderBottomStyle,\n    borderBottomWidth = style.borderBottomWidth,\n    borderRightWidth = style.borderRightWidth,\n    borderLeftWidth = style.borderLeftWidth;\n  var c0 = rbl * (1.0 - KAPPA);\n  var c1 = rbr * (1.0 - KAPPA);\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - c1, left + width - c1, top + height, left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2);\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, {\n      space: borderBottomWidth * 1.2\n    });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, {\n      space: borderBottomWidth * 1.2\n    });\n  }\n  ctx.stroke();\n  ctx.undash();\n};\nvar clipBorderLeft = function clipBorderLeft(ctx, layout, style, rbl, rtl) {\n  var top = layout.top,\n    left = layout.left,\n    width = layout.width,\n    height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n    borderLeftWidth = style.borderLeftWidth,\n    borderBottomWidth = style.borderBottomWidth; // Clip outer left border edge\n\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl); // Ellipse coefficients outer top left cap\n\n  var c0 = rtl * (1.0 - KAPPA); // Clip outer top left cap\n\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top); // Move right in case the margin exceedes the radius\n\n  var topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top); // Clip inner top left cap\n\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth); // Ellipse coefficients inner top left cap\n\n  var innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  var innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  var c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  var c2 = innerTopLeftRadiusY * (1.0 - KAPPA); // Clip inner top right cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth + c1, top + borderTopWidth, left + borderLeftWidth, top + borderTopWidth + c2, left + borderLeftWidth, top + Math.max(rtl, borderTopWidth)); // Clip inner left border edge\n\n  ctx.lineTo(left + borderLeftWidth, top + height - Math.max(rbl, borderBottomWidth)); // Ellipse coefficients inner bottom left cap\n\n  var innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  var innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  var c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  var c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  var bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth, top + height - borderBottomWidth - c4, left + borderLeftWidth + c3, top + height - borderBottomWidth, bottomLeftXCoord, top + height - borderBottomWidth);\n  ctx.lineTo(bottomLeftXCoord, top + height); // Move left in case the margin exceedes the radius\n\n  ctx.lineTo(left + rbl, top + height); // Ellipse coefficients outer top right cap\n\n  var c5 = rbl * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + c5, top + height, left, top + height - c5, left, top + height - rbl);\n  ctx.closePath();\n  ctx.clip(); // Clip border right cap joins\n\n  if (borderBottomWidth) {\n    var trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n  if (borderBottomWidth) {\n    var _trSlope2 = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, _trSlope2 * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\nvar fillBorderLeft = function fillBorderLeft(ctx, layout, style, rbl, rtl) {\n  var top = layout.top,\n    left = layout.left,\n    height = layout.height;\n  var borderLeftColor = style.borderLeftColor,\n    borderLeftStyle = style.borderLeftStyle,\n    borderLeftWidth = style.borderLeftWidth,\n    borderTopWidth = style.borderTopWidth,\n    borderBottomWidth = style.borderBottomWidth;\n  var c0 = rbl * (1.0 - KAPPA);\n  var c1 = rtl * (1.0 - KAPPA);\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2);\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, {\n      space: borderLeftWidth * 1.2\n    });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, {\n      space: borderLeftWidth * 1.2\n    });\n  }\n  ctx.stroke();\n  ctx.undash();\n};\nvar shouldRenderBorders = function shouldRenderBorders(node) {\n  return node.box && (node.box.borderTopWidth || node.box.borderRightWidth || node.box.borderBottomWidth || node.box.borderLeftWidth);\n};\nvar renderBorders = function renderBorders(ctx, node) {\n  if (!shouldRenderBorders(node)) return;\n  var _node$box = node.box,\n    width = _node$box.width,\n    height = _node$box.height,\n    borderTopWidth = _node$box.borderTopWidth,\n    borderLeftWidth = _node$box.borderLeftWidth,\n    borderRightWidth = _node$box.borderRightWidth,\n    borderBottomWidth = _node$box.borderBottomWidth;\n  var _node$style = node.style,\n    opacity = _node$style.opacity,\n    _node$style$borderTop = _node$style.borderTopLeftRadius,\n    borderTopLeftRadius = _node$style$borderTop === void 0 ? 0 : _node$style$borderTop,\n    _node$style$borderTop2 = _node$style.borderTopRightRadius,\n    borderTopRightRadius = _node$style$borderTop2 === void 0 ? 0 : _node$style$borderTop2,\n    _node$style$borderBot = _node$style.borderBottomLeftRadius,\n    borderBottomLeftRadius = _node$style$borderBot === void 0 ? 0 : _node$style$borderBot,\n    _node$style$borderBot2 = _node$style.borderBottomRightRadius,\n    borderBottomRightRadius = _node$style$borderBot2 === void 0 ? 0 : _node$style$borderBot2,\n    _node$style$borderTop3 = _node$style.borderTopColor,\n    borderTopColor = _node$style$borderTop3 === void 0 ? 'black' : _node$style$borderTop3,\n    _node$style$borderTop4 = _node$style.borderTopStyle,\n    borderTopStyle = _node$style$borderTop4 === void 0 ? 'solid' : _node$style$borderTop4,\n    _node$style$borderLef = _node$style.borderLeftColor,\n    borderLeftColor = _node$style$borderLef === void 0 ? 'black' : _node$style$borderLef,\n    _node$style$borderLef2 = _node$style.borderLeftStyle,\n    borderLeftStyle = _node$style$borderLef2 === void 0 ? 'solid' : _node$style$borderLef2,\n    _node$style$borderRig = _node$style.borderRightColor,\n    borderRightColor = _node$style$borderRig === void 0 ? 'black' : _node$style$borderRig,\n    _node$style$borderRig2 = _node$style.borderRightStyle,\n    borderRightStyle = _node$style$borderRig2 === void 0 ? 'solid' : _node$style$borderRig2,\n    _node$style$borderBot3 = _node$style.borderBottomColor,\n    borderBottomColor = _node$style$borderBot3 === void 0 ? 'black' : _node$style$borderBot3,\n    _node$style$borderBot4 = _node$style.borderBottomStyle,\n    borderBottomStyle = _node$style$borderBot4 === void 0 ? 'solid' : _node$style$borderBot4;\n  var style = {\n    borderTopColor: borderTopColor,\n    borderTopWidth: borderTopWidth,\n    borderTopStyle: borderTopStyle,\n    borderLeftColor: borderLeftColor,\n    borderLeftWidth: borderLeftWidth,\n    borderLeftStyle: borderLeftStyle,\n    borderRightColor: borderRightColor,\n    borderRightWidth: borderRightWidth,\n    borderRightStyle: borderRightStyle,\n    borderBottomColor: borderBottomColor,\n    borderBottomWidth: borderBottomWidth,\n    borderBottomStyle: borderBottomStyle,\n    borderTopLeftRadius: borderTopLeftRadius,\n    borderTopRightRadius: borderTopRightRadius,\n    borderBottomLeftRadius: borderBottomLeftRadius,\n    borderBottomRightRadius: borderBottomRightRadius\n  };\n  var rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  var rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  var rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  var rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n  ctx.save();\n  ctx.strokeOpacity(opacity);\n  if (borderTopWidth) {\n    ctx.save();\n    clipBorderTop(ctx, node.box, style, rtr, rtl);\n    fillBorderTop(ctx, node.box, style, rtr, rtl);\n    ctx.restore();\n  }\n  if (borderRightWidth) {\n    ctx.save();\n    clipBorderRight(ctx, node.box, style, rtr, rbr);\n    fillBorderRight(ctx, node.box, style, rtr, rbr);\n    ctx.restore();\n  }\n  if (borderBottomWidth) {\n    ctx.save();\n    clipBorderBottom(ctx, node.box, style, rbl, rbr);\n    fillBorderBottom(ctx, node.box, style, rbl, rbr);\n    ctx.restore();\n  }\n  if (borderLeftWidth) {\n    ctx.save();\n    clipBorderLeft(ctx, node.box, style, rbl, rtl);\n    fillBorderLeft(ctx, node.box, style, rbl, rtl);\n    ctx.restore();\n  }\n  ctx.restore();\n};\nvar drawBackground = function drawBackground(ctx, node) {\n  var _node$style;\n  var _node$box = node.box,\n    top = _node$box.top,\n    left = _node$box.left,\n    width = _node$box.width,\n    height = _node$box.height;\n  var color = parseColor(node.style.backgroundColor);\n  var nodeOpacity = isNil((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.opacity) ? 1 : node.style.opacity;\n  var opacity = Math.min(color.opacity, nodeOpacity);\n  ctx.fillOpacity(opacity).fillColor(color.value).rect(left, top, width, height).fill();\n};\nvar renderBackground = function renderBackground(ctx, node) {\n  var _node$style2;\n  var hasBackground = !!node.box && !!((_node$style2 = node.style) !== null && _node$style2 !== void 0 && _node$style2.backgroundColor);\n  if (hasBackground) {\n    ctx.save();\n    clipNode(ctx, node);\n    drawBackground(ctx, node);\n    ctx.restore();\n  }\n};\nvar isSrcId = function isSrcId(value) {\n  return /^#.+/.test(value);\n};\nvar setLink = function setLink(ctx, node) {\n  var props = node.props || {};\n  var _node$box = node.box,\n    top = _node$box.top,\n    left = _node$box.left,\n    width = _node$box.width,\n    height = _node$box.height;\n  var src = props.src || props.href;\n  if (src) {\n    var isId = isSrcId(src);\n    var method = isId ? 'goTo' : 'link';\n    var value = isId ? src.slice(1) : src;\n    ctx[method](left, top, width, height, value);\n  }\n};\nvar setDestination = function setDestination(ctx, node) {\n  var _node$props;\n  if ((_node$props = node.props) !== null && _node$props !== void 0 && _node$props.id) {\n    ctx.addNamedDestination(node.props.id, 'XYZ', null, node.box.top, null);\n  }\n};\nvar _renderFns;\nvar isRecursiveNode = function isRecursiveNode(node) {\n  return node.type !== P.Text && node.type !== P.Svg;\n};\nvar renderChildren = function renderChildren(ctx, node, options) {\n  ctx.save();\n  if (node.box) {\n    ctx.translate(node.box.left, node.box.top);\n  }\n  var children = node.children || [];\n  var renderChild = function renderChild(child) {\n    return renderNode(ctx, child, options);\n  };\n  children.forEach(renderChild);\n  ctx.restore();\n};\nvar renderFns = (_renderFns = {}, _renderFns[P.Text] = renderText, _renderFns[P.Note] = renderNote, _renderFns[P.Image] = renderImage, _renderFns[P.Canvas] = renderCanvas, _renderFns[P.Svg] = renderSvg, _renderFns[P.Link] = setLink, _renderFns);\nvar renderNode = function renderNode(ctx, node, options) {\n  var _node$style;\n  var overflowHidden = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.overflow) === 'hidden';\n  var shouldRenderChildren = isRecursiveNode(node);\n  if (node.type === P.Page) renderPage(ctx, node);\n  ctx.save();\n  if (overflowHidden) clipNode(ctx, node);\n  applyTransformations(ctx, node);\n  renderBackground(ctx, node);\n  renderBorders(ctx, node);\n  var renderFn = renderFns[node.type];\n  if (renderFn) renderFn(ctx, node, options);\n  if (shouldRenderChildren) renderChildren(ctx, node, options);\n  setDestination(ctx, node);\n  renderDebug(ctx, node);\n  ctx.restore();\n};\n\n/* eslint-disable no-param-reassign */\nvar setPDFMetadata = function setPDFMetadata(target) {\n  return function (key, value) {\n    if (value) target.info[key] = value;\n  };\n};\n/**\n * Set document instance metadata\n *\n * @param {Object} ctx document instance\n * @param {Object} doc document root\n */\n\nvar addMetadata = function addMetadata(ctx, doc) {\n  var setProp = setPDFMetadata(ctx);\n  var props = doc.props || {};\n  var title = props.title || null;\n  var author = props.author || null;\n  var subject = props.subject || null;\n  var keywords = props.keywords || null;\n  var creator = props.creator || 'react-pdf';\n  var producer = props.producer || 'react-pdf';\n  setProp('Title', title);\n  setProp('Author', author);\n  setProp('Subject', subject);\n  setProp('Keywords', keywords);\n  setProp('Creator', creator);\n  setProp('Producer', producer);\n};\n\n/* eslint-disable no-param-reassign */\nvar addNodeBookmark = function addNodeBookmark(ctx, node, pageNumber, registry) {\n  var _node$props;\n  var bookmark = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.bookmark;\n  if (bookmark) {\n    var title = bookmark.title,\n      parent = bookmark.parent,\n      expanded = bookmark.expanded,\n      zoom = bookmark.zoom,\n      fit = bookmark.fit;\n    var outline = registry[parent] || ctx.outline;\n    var top = bookmark.top || node.box.top;\n    var left = bookmark.left || node.box.left;\n    var instance = outline.addItem(title, {\n      pageNumber: pageNumber,\n      expanded: expanded,\n      top: top,\n      left: left,\n      zoom: zoom,\n      fit: fit\n    });\n    registry[bookmark.ref] = instance;\n  }\n  if (!node.children) return;\n  node.children.forEach(function (child) {\n    return addNodeBookmark(ctx, child, pageNumber, registry);\n  });\n};\nvar addBookmarks = function addBookmarks(ctx, root) {\n  var registry = {};\n  var pages = root.children || [];\n  pages.forEach(function (page, i) {\n    addNodeBookmark(ctx, page, i, registry);\n  });\n};\nvar render = function render(ctx, doc) {\n  var pages = doc.children || [];\n  var options = {\n    imageCache: new Map()\n  };\n  addMetadata(ctx, doc);\n  pages.forEach(function (page) {\n    return renderNode(ctx, page, options);\n  });\n  addBookmarks(ctx, doc);\n  ctx.end();\n  return ctx;\n};\nexport { render as default };","map":{"version":3,"names":["P","isNil","matchPercent","absPath","parsePath","normalizePath","colorString","_extends","renderPath","ctx","node","_node$props","d","props","path","KAPPA$3","Math","sqrt","renderRect","_node$props2","_node$props3","_node$props4","_node$props5","_node$props6","x","y","rx","ry","width","height","krx","kry","moveTo","lineTo","bezierCurveTo","closePath","renderLine$1","renderLine","_ref","x1","x2","y1","y2","renderGroup","KAPPA$2","drawEllipse","cx","cy","ox","oy","xe","ye","xm","ym","renderEllipse","renderCircle","r","renderGlyphs","glyphs","positions","options","scale","_fontSize","unitsPerEm","_font","font","advanceWidthScale","encodedGlyphs","encodeGlyphs","encodedPositions","map","pos","i","xAdvance","yAdvance","xOffset","yOffset","advanceWidth","_glyphs","renderRun$1","renderRun","run","runAdvanceWidth","_run$attributes","attributes","fontSize","color","opacity","fillColor","fillOpacity","sbix","COLR","CPAL","save","translate","ascent","length","position","glyph","render","restore","name","error","console","log","renderSpan","line","textAnchor","dominantBaseline","_line$box","_line$box2","_line$runs$","_line$runs$2","_line$runs$2$attribut","box","runs","xHeight","descent","capHeight","xTranslate","yTranslate","forEach","renderSvgText","children","span","lines","pairs","values","result","push","parsePoints","points","trim","replace","split","slice","parseFloat","drawPolyline","p","renderPolyline","renderPolygon","renderImage$1","renderImage","image","data","_node$style","style","paddingTop","paddingLeft","warn","href","KAPPA$1","clipNode","_node$box","top","left","_node$style$borderTop","borderTopLeftRadius","_node$style$borderTop2","borderTopRightRadius","_node$style$borderBot","borderBottomRightRadius","_node$style$borderBot2","borderBottomLeftRadius","rtr","min","ctr","rbr","cbr","rbl","cbl","rtl","ctl","clip","applySingleTransformation","transform","origin","operation","value","scaleX","scaleY","angle","rotate","xAngle","yAngle","skew","apply","applyTransformations","operations","_boundingBoxFns","getPathBoundingBox","bounds","Infinity","l","j","getCircleBoundingBox","getEllipseBoundingBox","_node$props7","_node$props8","getLineBoundingBox","_node$props9","_node$props10","_node$props11","_node$props12","max","getRectBoundingBox","_node$props13","_node$props14","_node$props15","_node$props16","concat","getPolylineBoundingBox","_node$props17","xValues","yValues","boundingBoxFns","Rect","Line","Path","Circle","Ellipse","Polygon","Polyline","getBoundingBox","boundingBoxFn","type","_renderFns$1","setStrokeWidth","lineWidth","strokeWidth","setStrokeColor","strokeColor","stroke","setOpacity","setFillOpacity","setStrokeOpacity","strokeOpacity","setLineJoin","lineJoin","strokeLinejoin","setLineCap","lineCap","strokeLinecap","setLineDash","strokeDasharray","dash","hasLinearGradientFill","_node$props9$fill","fill","LinearGradient","hasRadialGradientFill","_node$props10$fill","RadialGradient","setLinearGradientFill","bbox","gradient","m0","m3","m4","m5","gx1","gy1","gx2","gy2","grad","linearGradient","stop","offset","stopColor","stopOpacity","setRadialGradientFill","fx","fy","gr","gcx","gcy","gfx","gfy","radialGradient","setFillColor","setFill","draw","fillAndStroke","fillRule","noop","renderFns$1","Tspan","TextInstance","G","Text","Image","renderNode$1","renderNode","renderFn","drawNode","clipPath","child","drawChildren","resolveAspectRatio","viewBox","_node$props15$preserv","preserveAspectRatio","_preserveAspectRatio$","meetOrSlice","_preserveAspectRatio$2","align","minX","minY","logicalWidth","maxX","logicalHeight","maxY","logicalRatio","physicalRatio","moveToOrigin","_node$box2","renderSvg","parseColor","hex","parsed","get","to","DEST_REGEXP","isSrcId$1","isSrcId","src","match","renderAttachment","attachment","_attachment$xOffset","_attachment$yOffset","fit","valign","renderAttachments","space","glyphForCodePoint","objectReplacement","attachmentAdvance","id","link","outlineRuns","rect","goTo","renderBackground$1","renderBackground","backgroundColor","renderDecorationLine","test","dist","step","stepCount","floor","remainingWidth","adjustment","cp1y","cp2y","lineAscent","outlineLines","isLastRun","overflowRight","backgroundRect","_i","decorationLines","decorationLine","renderBlock","block","renderText","_node$box3","blocks","initialY","offsetX","alignOffset","renderPage","dpi","userUnit","addPage","size","margin","renderNote","_node$children","_node$style2","borderWidth","note","isNumeric","n","Number","isNaN","isFinite","applyContainObjectFit","cw","ch","iw","ih","px","py","cr","ir","pxp","pyp","pxv","percent","pyv","_height","_width","_yOffset","_xOffset","applyNoneObjectFit","applyCoverObjectFit","_width2","_height2","_xOffset2","_yOffset2","applyScaleDownObjectFit","containDimension","noneDimension","applyFillObjectFit","resolveObjectFit","drawImage","_node$style3","_node$style4","objectFit","objectPositionX","objectPositionY","paddingRight","paddingBottom","imageCache","Map","_resolveObjectFit","cacheKey","key","embedImage","set","imageOpacity","JSON","stringify","CONTENT_COLOR","PADDING_COLOR","MARGIN_COLOR","debugContent","_node$box$paddingLeft","_node$box$paddingTop","_node$box$paddingRigh","_node$box$paddingBott","_node$box$borderLeftW","borderLeftWidth","_node$box$borderTopWi","borderTopWidth","_node$box$borderRight","borderRightWidth","_node$box$borderBotto","borderBottomWidth","debugPadding","_node$box2$paddingLef","_node$box2$paddingTop","_node$box2$paddingRig","_node$box2$paddingBot","_node$box2$borderLeft","_node$box2$borderTopW","_node$box2$borderRigh","_node$box2$borderBott","getMargin","marginLeft","marginTop","marginRight","marginBottom","debugMargin","_getMargin","_getMargin$marginLeft","_getMargin$marginTop","_getMargin$marginRigh","_getMargin$marginBott","debugText","_node$box4","_getMargin2","_getMargin2$marginLef","_getMargin2$marginTop","_getMargin2$marginRig","_getMargin2$marginBot","roundedWidth","round","roundedHeight","text","debugOrigin","circle","renderDebug","debug","availableMethods","painter","reduce","acc","prop","_extends2","arguments","renderCanvas","availableWidth","availableHeight","paint","KAPPA","clipBorderTop","layout","c0","topRightYCoord","innerTopRightRadiusX","innerTopRightRadiusY","c1","c2","innerTopLeftRadiusX","innerTopLeftRadiusY","c3","c4","topLeftYCoord","c5","trSlope","_trSlope","fillBorderTop","borderTopColor","borderTopStyle","undash","clipBorderRight","topBottomXCoord","innerBottomRightRadiusX","innerBottomRightRadiusY","topRightXCoord","brSlope","fillBorderRight","borderRightColor","borderRightStyle","clipBorderBottom","bottomLeftYCoord","innerBottomLeftRadiusX","innerBottomLeftRadiusY","bottomRightYCoord","fillBorderBottom","borderBottomColor","borderBottomStyle","clipBorderLeft","topLeftCoordX","bottomLeftXCoord","_trSlope2","fillBorderLeft","borderLeftColor","borderLeftStyle","shouldRenderBorders","renderBorders","_node$style$borderTop3","_node$style$borderTop4","_node$style$borderLef","_node$style$borderLef2","_node$style$borderRig","_node$style$borderRig2","_node$style$borderBot3","_node$style$borderBot4","drawBackground","nodeOpacity","hasBackground","setLink","isId","method","setDestination","addNamedDestination","_renderFns","isRecursiveNode","Svg","renderChildren","renderChild","renderFns","Note","Canvas","Link","overflowHidden","overflow","shouldRenderChildren","Page","setPDFMetadata","target","info","addMetadata","doc","setProp","title","author","subject","keywords","creator","producer","addNodeBookmark","pageNumber","registry","bookmark","parent","expanded","zoom","outline","instance","addItem","ref","addBookmarks","root","pages","page","end","default"],"sources":["C:/Users/Abdullah/Desktop/Project/TTP-Project/client/node_modules/@react-pdf/render/lib/index.es.js"],"sourcesContent":["import * as P from '@react-pdf/primitives';\nimport { isNil, matchPercent } from '@react-pdf/fns';\nimport absPath from 'abs-svg-path';\nimport parsePath from 'parse-svg-path';\nimport normalizePath from 'normalize-svg-path';\nimport colorString from 'color-string';\nimport _extends from '@babel/runtime/helpers/extends';\n\nvar renderPath = function renderPath(ctx, node) {\n  var _node$props;\n\n  var d = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.d;\n  if (d) ctx.path(node.props.d);\n};\n\nvar KAPPA$3 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nvar renderRect = function renderRect(ctx, node) {\n  var _node$props, _node$props2, _node$props3, _node$props4, _node$props5, _node$props6;\n\n  var x = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.x) || 0;\n  var y = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.y) || 0;\n  var rx = ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.rx) || 0;\n  var ry = ((_node$props4 = node.props) === null || _node$props4 === void 0 ? void 0 : _node$props4.ry) || 0;\n  var width = ((_node$props5 = node.props) === null || _node$props5 === void 0 ? void 0 : _node$props5.width) || 0;\n  var height = ((_node$props6 = node.props) === null || _node$props6 === void 0 ? void 0 : _node$props6.height) || 0;\n  if (!width || !height) return;\n\n  if (rx && ry) {\n    var krx = rx * KAPPA$3;\n    var kry = ry * KAPPA$3;\n    ctx.moveTo(x + rx, y);\n    ctx.lineTo(x - rx + width, y);\n    ctx.bezierCurveTo(x - rx + width + krx, y, x + width, y + ry - kry, x + width, y + ry);\n    ctx.lineTo(x + width, y + height - ry);\n    ctx.bezierCurveTo(x + width, y + height - ry + kry, x - rx + width + krx, y + height, x - rx + width, y + height);\n    ctx.lineTo(x + rx, y + height);\n    ctx.bezierCurveTo(x + rx - krx, y + height, x, y + height - ry + kry, x, y + height - ry);\n    ctx.lineTo(x, y + ry);\n    ctx.bezierCurveTo(x, y + ry - kry, x + rx - krx, y, x + rx, y);\n  } else {\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x + width, y + height);\n    ctx.lineTo(x, y + height);\n  }\n\n  ctx.closePath();\n};\n\nvar renderLine$1 = function renderLine(ctx, node) {\n  var _ref = node.props || {},\n      x1 = _ref.x1,\n      x2 = _ref.x2,\n      y1 = _ref.y1,\n      y2 = _ref.y2;\n\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n};\n\nvar renderGroup = function renderGroup() {// noop\n};\n\nvar KAPPA$2 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nvar drawEllipse = function drawEllipse(ctx, cx, cy, rx, ry) {\n  var x = cx - rx;\n  var y = cy - ry;\n  var ox = rx * KAPPA$2;\n  var oy = ry * KAPPA$2;\n  var xe = x + rx * 2;\n  var ye = y + ry * 2;\n  var xm = x + rx;\n  var ym = y + ry;\n  ctx.moveTo(x, ym);\n  ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n  ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n  ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n  ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n  ctx.closePath();\n};\n\nvar renderEllipse = function renderEllipse(ctx, node) {\n  var _ref = node.props || {},\n      cx = _ref.cx,\n      cy = _ref.cy,\n      rx = _ref.rx,\n      ry = _ref.ry;\n\n  drawEllipse(ctx, cx, cy, rx, ry);\n};\n\nvar renderCircle = function renderCircle(ctx, node) {\n  var _node$props, _node$props2, _node$props3;\n\n  var cx = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.cx;\n  var cy = (_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.cy;\n  var r = (_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.r;\n  drawEllipse(ctx, cx, cy, r, r);\n};\n\nvar renderGlyphs = function renderGlyphs(ctx, glyphs, positions, x, y, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var scale = 1000 / ctx._fontSize;\n  var unitsPerEm = ctx._font.font.unitsPerEm || 1000;\n  var advanceWidthScale = 1000 / unitsPerEm; // Glyph encoding and positioning\n\n  var encodedGlyphs = ctx._font.encodeGlyphs(glyphs);\n\n  var encodedPositions = positions.map(function (pos, i) {\n    return {\n      xAdvance: pos.xAdvance * scale,\n      yAdvance: pos.yAdvance * scale,\n      xOffset: pos.xOffset,\n      yOffset: pos.yOffset,\n      advanceWidth: glyphs[i].advanceWidth * advanceWidthScale\n    };\n  });\n  return ctx._glyphs(encodedGlyphs, encodedPositions, x, y, options);\n};\n\nvar renderRun$1 = function renderRun(ctx, run) {\n  var runAdvanceWidth = run.xAdvance;\n  var _run$attributes = run.attributes,\n      font = _run$attributes.font,\n      fontSize = _run$attributes.fontSize,\n      color = _run$attributes.color,\n      opacity = _run$attributes.opacity;\n  ctx.fillColor(color);\n  ctx.fillOpacity(opacity);\n\n  if (font.sbix || font.COLR && font.CPAL) {\n    ctx.save();\n    ctx.translate(0, -run.ascent);\n\n    for (var i = 0; i < run.glyphs.length; i += 1) {\n      var position = run.positions[i];\n      var glyph = run.glyphs[i];\n      ctx.save();\n      ctx.translate(position.xOffset, position.yOffset);\n      glyph.render(ctx, fontSize);\n      ctx.restore();\n      ctx.translate(position.xAdvance, position.yAdvance);\n    }\n\n    ctx.restore();\n  } else {\n    ctx.font(typeof font.name === 'string' ? font.name : font, fontSize);\n\n    try {\n      renderGlyphs(ctx, run.glyphs, run.positions, 0, 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ctx.translate(runAdvanceWidth, 0);\n};\n\nvar renderSpan = function renderSpan(ctx, line, textAnchor, dominantBaseline) {\n  var _line$box, _line$box2, _line$runs$, _line$runs$2, _line$runs$2$attribut;\n\n  ctx.save();\n  var x = ((_line$box = line.box) === null || _line$box === void 0 ? void 0 : _line$box.x) || 0;\n  var y = ((_line$box2 = line.box) === null || _line$box2 === void 0 ? void 0 : _line$box2.y) || 0;\n  var font = (_line$runs$ = line.runs[0]) === null || _line$runs$ === void 0 ? void 0 : _line$runs$.attributes.font;\n  var scale = ((_line$runs$2 = line.runs[0]) === null || _line$runs$2 === void 0 ? void 0 : (_line$runs$2$attribut = _line$runs$2.attributes) === null || _line$runs$2$attribut === void 0 ? void 0 : _line$runs$2$attribut.scale) || 1;\n  var width = line.xAdvance;\n  var ascent = font.ascent * scale;\n  var xHeight = font.xHeight * scale;\n  var descent = font.descent * scale;\n  var capHeight = font.capHeight * scale;\n  var xTranslate = x;\n  var yTranslate = y;\n\n  switch (textAnchor) {\n    case 'middle':\n      xTranslate = x - width / 2;\n      break;\n\n    case 'end':\n      xTranslate = x - width;\n      break;\n\n    default:\n      xTranslate = x;\n      break;\n  }\n\n  switch (dominantBaseline) {\n    case 'middle':\n    case 'central':\n      yTranslate = y + capHeight / 2;\n      break;\n\n    case 'hanging':\n      yTranslate = y + capHeight;\n      break;\n\n    case 'mathematical':\n      yTranslate = y + xHeight;\n      break;\n\n    case 'text-after-edge':\n      yTranslate = y + descent;\n      break;\n\n    case 'text-before-edge':\n      yTranslate = y + ascent;\n      break;\n\n    default:\n      yTranslate = y;\n      break;\n  }\n\n  ctx.translate(xTranslate, yTranslate);\n  line.runs.forEach(function (run) {\n    return renderRun$1(ctx, run);\n  });\n  ctx.restore();\n};\n\nvar renderSvgText = function renderSvgText(ctx, node) {\n  node.children.forEach(function (span) {\n    return renderSpan(ctx, span.lines[0], span.props.textAnchor, span.props.dominantBaseline);\n  });\n};\n\nvar pairs = function pairs(values) {\n  var result = [];\n\n  for (var i = 0; i < values.length; i += 2) {\n    result.push([values[i], values[i + 1]]);\n  }\n\n  return result;\n};\n/**\n * Parse svg-like points into number arrays\n *\n * @param {String} points string ex. \"20,30 50,60\"\n * @return {Array} points array ex. [[20, 30], [50, 60]]\n */\n\n\nvar parsePoints = function parsePoints(points) {\n  var values = (points || '').trim().replace(/,/g, ' ').replace(/(\\d)-(\\d)/g, '$1 -$2').split(/\\s+/);\n\n  if (values.length % 2 !== 0) {\n    values = values.slice(0, -1);\n  }\n\n  values = values.map(parseFloat);\n  return pairs(values);\n};\n\nvar drawPolyline = function drawPolyline(ctx, points) {\n  if (points.length > 0) {\n    ctx.moveTo(points[0][0], points[0][1]);\n    points.slice(1).forEach(function (p) {\n      return ctx.lineTo(p[0], p[1]);\n    });\n  }\n};\n\nvar renderPolyline = function renderPolyline(ctx, node) {\n  var points = parsePoints(node.props.points || '');\n  drawPolyline(ctx, points);\n};\n\nvar renderPolygon = function renderPolygon(ctx, node) {\n  renderPolyline(ctx, node);\n  ctx.closePath();\n};\n\nvar renderImage$1 = function renderImage(ctx, node) {\n  if (!node.image.data) return;\n  var _node$props = node.props,\n      x = _node$props.x,\n      y = _node$props.y;\n  var _node$style = node.style,\n      width = _node$style.width,\n      height = _node$style.height,\n      opacity = _node$style.opacity;\n  var paddingTop = node.box.paddingLeft || 0;\n  var paddingLeft = node.box.paddingLeft || 0;\n\n  if (width === 0 || height === 0) {\n    console.warn(\"Image with src '\" + node.props.href + \"' skipped due to invalid dimensions\");\n    return;\n  }\n\n  ctx.save();\n  ctx.fillOpacity(opacity || 1).image(node.image.data, x + paddingLeft, y + paddingTop, {\n    width: width,\n    height: height\n  });\n  ctx.restore();\n};\n\n// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nvar KAPPA$1 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nvar clipNode = function clipNode(ctx, node) {\n  if (!node.style) return;\n  var _node$box = node.box,\n      top = _node$box.top,\n      left = _node$box.left,\n      width = _node$box.width,\n      height = _node$box.height;\n  var _node$style = node.style,\n      _node$style$borderTop = _node$style.borderTopLeftRadius,\n      borderTopLeftRadius = _node$style$borderTop === void 0 ? 0 : _node$style$borderTop,\n      _node$style$borderTop2 = _node$style.borderTopRightRadius,\n      borderTopRightRadius = _node$style$borderTop2 === void 0 ? 0 : _node$style$borderTop2,\n      _node$style$borderBot = _node$style.borderBottomRightRadius,\n      borderBottomRightRadius = _node$style$borderBot === void 0 ? 0 : _node$style$borderBot,\n      _node$style$borderBot2 = _node$style.borderBottomLeftRadius,\n      borderBottomLeftRadius = _node$style$borderBot2 === void 0 ? 0 : _node$style$borderBot2; // Border top\n\n  var rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  var ctr = rtr * (1.0 - KAPPA$1);\n  ctx.moveTo(left + rtr, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - ctr, top, left + width, top + ctr, left + width, top + rtr); // Border right\n\n  var rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  var cbr = rbr * (1.0 - KAPPA$1);\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - cbr, left + width - cbr, top + height, left + width - rbr, top + height); // Border bottom\n\n  var rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n  var cbl = rbl * (1.0 - KAPPA$1);\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + cbl, top + height, left, top + height - cbl, left, top + height - rbl); // Border left\n\n  var rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  var ctl = rtl * (1.0 - KAPPA$1);\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + ctl, left + ctl, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n};\n\nvar applySingleTransformation = function applySingleTransformation(ctx, transform, origin) {\n  var operation = transform.operation,\n      value = transform.value;\n\n  switch (operation) {\n    case 'scale':\n      {\n        var scaleX = value[0],\n            scaleY = value[1];\n        ctx.scale(scaleX, scaleY, {\n          origin: origin\n        });\n        break;\n      }\n\n    case 'rotate':\n      {\n        var angle = value[0];\n        ctx.rotate(angle, {\n          origin: origin\n        });\n        break;\n      }\n\n    case 'translate':\n      {\n        var x = value[0],\n            y = value[1];\n        ctx.translate(x, y, {\n          origin: origin\n        });\n        break;\n      }\n\n    case 'skew':\n      {\n        var xAngle = value[0],\n            yAngle = value[1];\n        ctx.skew(xAngle, yAngle, {\n          origin: origin\n        });\n        break;\n      }\n\n    case 'matrix':\n      {\n        ctx.transform.apply(ctx, value);\n        break;\n      }\n\n    default:\n      {\n        console.error(\"Transform operation: '\" + operation + \"' doesn't supported\");\n      }\n  }\n};\n\nvar applyTransformations = function applyTransformations(ctx, node) {\n  var _node$style, _node$props;\n\n  if (!node.origin) return;\n  var origin = [node.origin.left, node.origin.top];\n  var operations = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.transform) || ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.transform) || [];\n  operations.forEach(function (operation) {\n    applySingleTransformation(ctx, operation, origin);\n  });\n};\n\nvar _boundingBoxFns;\n\nvar getPathBoundingBox = function getPathBoundingBox(node) {\n  var _node$props;\n\n  var path = normalizePath(absPath(parsePath(((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.d) || '')));\n  if (!path.length) return [0, 0, 0, 0];\n  var bounds = [Infinity, Infinity, -Infinity, -Infinity];\n\n  for (var i = 0, l = path.length; i < l; i += 1) {\n    var points = path[i].slice(1);\n\n    for (var j = 0; j < points.length; j += 2) {\n      if (points[j + 0] < bounds[0]) bounds[0] = points[j + 0];\n      if (points[j + 1] < bounds[1]) bounds[1] = points[j + 1];\n      if (points[j + 0] > bounds[2]) bounds[2] = points[j + 0];\n      if (points[j + 1] > bounds[3]) bounds[3] = points[j + 1];\n    }\n  }\n\n  return bounds;\n};\n\nvar getCircleBoundingBox = function getCircleBoundingBox(node) {\n  var _node$props2, _node$props3, _node$props4;\n\n  var r = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.r) || 0;\n  var cx = ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.cx) || 0;\n  var cy = ((_node$props4 = node.props) === null || _node$props4 === void 0 ? void 0 : _node$props4.cy) || 0;\n  return [cx - r, cy - r, cx + r, cy + r];\n};\n\nvar getEllipseBoundingBox = function getEllipseBoundingBox(node) {\n  var _node$props5, _node$props6, _node$props7, _node$props8;\n\n  var cx = ((_node$props5 = node.props) === null || _node$props5 === void 0 ? void 0 : _node$props5.cx) || 0;\n  var cy = ((_node$props6 = node.props) === null || _node$props6 === void 0 ? void 0 : _node$props6.cy) || 0;\n  var rx = ((_node$props7 = node.props) === null || _node$props7 === void 0 ? void 0 : _node$props7.rx) || 0;\n  var ry = ((_node$props8 = node.props) === null || _node$props8 === void 0 ? void 0 : _node$props8.ry) || 0;\n  return [cx - rx, cy - ry, cx + rx, cy + ry];\n};\n\nvar getLineBoundingBox = function getLineBoundingBox(node) {\n  var _node$props9, _node$props10, _node$props11, _node$props12;\n\n  var x1 = ((_node$props9 = node.props) === null || _node$props9 === void 0 ? void 0 : _node$props9.x1) || 0;\n  var y1 = ((_node$props10 = node.props) === null || _node$props10 === void 0 ? void 0 : _node$props10.y1) || 0;\n  var x2 = ((_node$props11 = node.props) === null || _node$props11 === void 0 ? void 0 : _node$props11.x2) || 0;\n  var y2 = ((_node$props12 = node.props) === null || _node$props12 === void 0 ? void 0 : _node$props12.y2) || 0;\n  return [Math.min(x1, x2), Math.min(y1, y2), Math.max(x1, x2), Math.max(y1, y2)];\n};\n\nvar getRectBoundingBox = function getRectBoundingBox(node) {\n  var _node$props13, _node$props14, _node$props15, _node$props16;\n\n  var x = ((_node$props13 = node.props) === null || _node$props13 === void 0 ? void 0 : _node$props13.x) || 0;\n  var y = ((_node$props14 = node.props) === null || _node$props14 === void 0 ? void 0 : _node$props14.y) || 0;\n  var width = ((_node$props15 = node.props) === null || _node$props15 === void 0 ? void 0 : _node$props15.width) || 0;\n  var height = ((_node$props16 = node.props) === null || _node$props16 === void 0 ? void 0 : _node$props16.height) || 0;\n  return [x, y, x + width, y + height];\n};\n\nvar max = function max(values) {\n  return Math.max.apply(Math, [-Infinity].concat(values));\n};\n\nvar min = function min(values) {\n  return Math.min.apply(Math, [Infinity].concat(values));\n};\n\nvar getPolylineBoundingBox = function getPolylineBoundingBox(node) {\n  var _node$props17;\n\n  var points = parsePoints(((_node$props17 = node.props) === null || _node$props17 === void 0 ? void 0 : _node$props17.points) || []);\n  var xValues = points.map(function (p) {\n    return p[0];\n  });\n  var yValues = points.map(function (p) {\n    return p[1];\n  });\n  return [min(xValues), min(yValues), max(xValues), max(yValues)];\n};\n\nvar boundingBoxFns = (_boundingBoxFns = {}, _boundingBoxFns[P.Rect] = getRectBoundingBox, _boundingBoxFns[P.Line] = getLineBoundingBox, _boundingBoxFns[P.Path] = getPathBoundingBox, _boundingBoxFns[P.Circle] = getCircleBoundingBox, _boundingBoxFns[P.Ellipse] = getEllipseBoundingBox, _boundingBoxFns[P.Polygon] = getPolylineBoundingBox, _boundingBoxFns[P.Polyline] = getPolylineBoundingBox, _boundingBoxFns);\n\nvar getBoundingBox = function getBoundingBox(node) {\n  var boundingBoxFn = boundingBoxFns[node.type];\n  return boundingBoxFn ? boundingBoxFn(node) : [0, 0, 0, 0];\n};\n\nvar _renderFns$1;\n\nvar setStrokeWidth = function setStrokeWidth(ctx, node) {\n  var _node$props;\n\n  var lineWidth = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.strokeWidth) || 0;\n  if (lineWidth) ctx.lineWidth(lineWidth);\n};\n\nvar setStrokeColor = function setStrokeColor(ctx, node) {\n  var _node$props2;\n\n  var strokeColor = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.stroke) || null;\n  if (strokeColor) ctx.strokeColor(strokeColor);\n};\n\nvar setOpacity = function setOpacity(ctx, node) {\n  var _node$props3;\n\n  var opacity = ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.opacity) || null;\n  if (!isNil(opacity)) ctx.opacity(opacity);\n};\n\nvar setFillOpacity = function setFillOpacity(ctx, node) {\n  var _node$props4;\n\n  var fillOpacity = ((_node$props4 = node.props) === null || _node$props4 === void 0 ? void 0 : _node$props4.fillOpacity) || null;\n  if (!isNil(fillOpacity)) ctx.fillOpacity(fillOpacity);\n};\n\nvar setStrokeOpacity = function setStrokeOpacity(ctx, node) {\n  var _node$props5;\n\n  var strokeOpacity = ((_node$props5 = node.props) === null || _node$props5 === void 0 ? void 0 : _node$props5.strokeOpacity) || null;\n  if (!isNil(strokeOpacity)) ctx.strokeOpacity(strokeOpacity);\n};\n\nvar setLineJoin = function setLineJoin(ctx, node) {\n  var _node$props6;\n\n  var lineJoin = ((_node$props6 = node.props) === null || _node$props6 === void 0 ? void 0 : _node$props6.strokeLinejoin) || null;\n  if (lineJoin) ctx.lineJoin(lineJoin);\n};\n\nvar setLineCap = function setLineCap(ctx, node) {\n  var _node$props7;\n\n  var lineCap = ((_node$props7 = node.props) === null || _node$props7 === void 0 ? void 0 : _node$props7.strokeLinecap) || null;\n  if (lineCap) ctx.lineCap(lineCap);\n};\n\nvar setLineDash = function setLineDash(ctx, node) {\n  var _node$props8;\n\n  var value = ((_node$props8 = node.props) === null || _node$props8 === void 0 ? void 0 : _node$props8.strokeDasharray) || null;\n  if (value) ctx.dash(value.split(','));\n};\n\nvar hasLinearGradientFill = function hasLinearGradientFill(node) {\n  var _node$props9, _node$props9$fill;\n\n  return ((_node$props9 = node.props) === null || _node$props9 === void 0 ? void 0 : (_node$props9$fill = _node$props9.fill) === null || _node$props9$fill === void 0 ? void 0 : _node$props9$fill.type) === P.LinearGradient;\n};\n\nvar hasRadialGradientFill = function hasRadialGradientFill(node) {\n  var _node$props10, _node$props10$fill;\n\n  return ((_node$props10 = node.props) === null || _node$props10 === void 0 ? void 0 : (_node$props10$fill = _node$props10.fill) === null || _node$props10$fill === void 0 ? void 0 : _node$props10$fill.type) === P.RadialGradient;\n}; // Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L104\n\n\nvar setLinearGradientFill = function setLinearGradientFill(ctx, node) {\n  var _node$props11;\n\n  var bbox = getBoundingBox(node);\n  var gradient = ((_node$props11 = node.props) === null || _node$props11 === void 0 ? void 0 : _node$props11.fill) || null;\n  var x1 = gradient.props.x1 || 0;\n  var y1 = gradient.props.y1 || 0;\n  var x2 = gradient.props.x2 || 1;\n  var y2 = gradient.props.y2 || 0;\n  var m0 = bbox[2] - bbox[0];\n  var m3 = bbox[3] - bbox[1];\n  var m4 = bbox[0];\n  var m5 = bbox[1];\n  var gx1 = m0 * x1 + m4;\n  var gy1 = m3 * y1 + m5;\n  var gx2 = m0 * x2 + m4;\n  var gy2 = m3 * y2 + m5;\n  var grad = ctx.linearGradient(gx1, gy1, gx2, gy2);\n  gradient.children.forEach(function (stop) {\n    grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n  });\n  ctx.fill(grad);\n}; // Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L155\n\n\nvar setRadialGradientFill = function setRadialGradientFill(ctx, node) {\n  var _node$props12;\n\n  var bbox = getBoundingBox(node);\n  var gradient = ((_node$props12 = node.props) === null || _node$props12 === void 0 ? void 0 : _node$props12.fill) || null;\n  var cx = gradient.props.cx || 0.5;\n  var cy = gradient.props.cy || 0.5;\n  var fx = gradient.props.fx || cx;\n  var fy = gradient.props.fy || cy;\n  var r = gradient.props.r || 0.5;\n  var m0 = bbox[2] - bbox[0];\n  var m3 = bbox[3] - bbox[1];\n  var m4 = bbox[0];\n  var m5 = bbox[1];\n  var gr = r * m0;\n  var gcx = m0 * cx + m4;\n  var gcy = m3 * cy + m5;\n  var gfx = m0 * fx + m4;\n  var gfy = m3 * fy + m5;\n  var grad = ctx.radialGradient(gfx, gfy, 0, gcx, gcy, gr);\n  gradient.children.forEach(function (stop) {\n    grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n  });\n  ctx.fill(grad);\n};\n\nvar setFillColor = function setFillColor(ctx, node) {\n  var _node$props13;\n\n  var fillColor = ((_node$props13 = node.props) === null || _node$props13 === void 0 ? void 0 : _node$props13.fill) || null;\n  if (fillColor) ctx.fillColor(fillColor);\n};\n\nvar setFill = function setFill(ctx, node) {\n  if (hasLinearGradientFill(node)) return setLinearGradientFill(ctx, node);\n  if (hasRadialGradientFill(node)) return setRadialGradientFill(ctx, node);\n  return setFillColor(ctx, node);\n};\n\nvar draw = function draw(ctx, node) {\n  var props = node.props || {};\n\n  if (props.fill && props.stroke) {\n    ctx.fillAndStroke(props.fillRule);\n  } else if (props.fill) {\n    ctx.fill(props.fillRule);\n  } else if (props.stroke) {\n    ctx.stroke();\n  } else {\n    ctx.save();\n    ctx.opacity(0);\n    ctx.fill(null);\n    ctx.restore();\n  }\n};\n\nvar noop = function noop() {};\n\nvar renderFns$1 = (_renderFns$1 = {}, _renderFns$1[P.Tspan] = noop, _renderFns$1[P.TextInstance] = noop, _renderFns$1[P.Path] = renderPath, _renderFns$1[P.Rect] = renderRect, _renderFns$1[P.Line] = renderLine$1, _renderFns$1[P.G] = renderGroup, _renderFns$1[P.Text] = renderSvgText, _renderFns$1[P.Circle] = renderCircle, _renderFns$1[P.Image] = renderImage$1, _renderFns$1[P.Ellipse] = renderEllipse, _renderFns$1[P.Polygon] = renderPolygon, _renderFns$1[P.Polyline] = renderPolyline, _renderFns$1);\n\nvar renderNode$1 = function renderNode(ctx, node) {\n  var renderFn = renderFns$1[node.type];\n\n  if (renderFns$1) {\n    renderFn(ctx, node);\n  } else {\n    console.warn(\"SVG node of type \" + node.type + \" is not currenty supported\");\n  }\n};\n\nvar drawNode = function drawNode(ctx, node) {\n  setLineCap(ctx, node);\n  setLineDash(ctx, node);\n  setLineJoin(ctx, node);\n  setStrokeWidth(ctx, node);\n  setStrokeColor(ctx, node);\n  setFill(ctx, node);\n  setStrokeOpacity(ctx, node);\n  setFillOpacity(ctx, node);\n  setOpacity(ctx, node);\n  applyTransformations(ctx, node);\n  renderNode$1(ctx, node);\n  draw(ctx, node);\n};\n\nvar clipPath = function clipPath(ctx, node) {\n  var _node$props14;\n\n  var value = (_node$props14 = node.props) === null || _node$props14 === void 0 ? void 0 : _node$props14.clipPath;\n\n  if (value) {\n    var children = value.children || [];\n    children.forEach(function (child) {\n      return renderNode$1(ctx, child);\n    });\n    ctx.clip();\n  }\n};\n\nvar drawChildren = function drawChildren(ctx, node) {\n  var children = node.children || [];\n  children.forEach(function (child) {\n    ctx.save();\n    clipPath(ctx, child);\n    drawNode(ctx, child);\n    drawChildren(ctx, child);\n    ctx.restore();\n  });\n};\n\nvar resolveAspectRatio = function resolveAspectRatio(ctx, node) {\n  var _node$box = node.box,\n      width = _node$box.width,\n      height = _node$box.height;\n  var _node$props15 = node.props,\n      viewBox = _node$props15.viewBox,\n      _node$props15$preserv = _node$props15.preserveAspectRatio,\n      preserveAspectRatio = _node$props15$preserv === void 0 ? {} : _node$props15$preserv;\n  var _preserveAspectRatio$ = preserveAspectRatio.meetOrSlice,\n      meetOrSlice = _preserveAspectRatio$ === void 0 ? 'meet' : _preserveAspectRatio$,\n      _preserveAspectRatio$2 = preserveAspectRatio.align,\n      align = _preserveAspectRatio$2 === void 0 ? 'xMidYMid' : _preserveAspectRatio$2;\n  if (viewBox == null || width == null || height == null) return;\n  var x = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.minX) || 0;\n  var y = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.minY) || 0;\n  var logicalWidth = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.maxX) || width;\n  var logicalHeight = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.maxY) || height;\n  var logicalRatio = logicalWidth / logicalHeight;\n  var physicalRatio = width / height;\n  var scaleX = width / logicalWidth;\n  var scaleY = height / logicalHeight;\n\n  if (align === 'none') {\n    ctx.scale(scaleX, scaleY);\n    ctx.translate(-x, -y);\n    return;\n  }\n\n  if (logicalRatio < physicalRatio && meetOrSlice === 'meet' || logicalRatio >= physicalRatio && meetOrSlice === 'slice') {\n    ctx.scale(scaleY, scaleY);\n\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMinYMid':\n      case 'xMinYMax':\n        ctx.translate(-x, -y);\n        break;\n\n      case 'xMidYMin':\n      case 'xMidYMid':\n      case 'xMidYMax':\n        ctx.translate(-x - (logicalWidth - width * logicalHeight / height) / 2, -y);\n        break;\n\n      default:\n        ctx.translate(-x - (logicalWidth - width * logicalHeight / height), -y);\n    }\n  } else {\n    ctx.scale(scaleX, scaleX);\n\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMidYMin':\n      case 'xMaxYMin':\n        ctx.translate(-x, -y);\n        break;\n\n      case 'xMinYMid':\n      case 'xMidYMid':\n      case 'xMaxYMid':\n        ctx.translate(-x, -y - (logicalHeight - height * logicalWidth / width) / 2);\n        break;\n\n      default:\n        ctx.translate(-x, -y - (logicalHeight - height * logicalWidth / width));\n    }\n  }\n};\n\nvar moveToOrigin = function moveToOrigin(ctx, node) {\n  var _node$box2 = node.box,\n      top = _node$box2.top,\n      left = _node$box2.left;\n  var paddingLeft = node.box.paddingLeft || 0;\n  var paddingTop = node.box.paddingTop || 0;\n  ctx.translate(left + paddingLeft, top + paddingTop);\n};\n\nvar renderSvg = function renderSvg(ctx, node) {\n  ctx.save();\n  clipNode(ctx, node);\n  moveToOrigin(ctx, node);\n  resolveAspectRatio(ctx, node);\n  drawChildren(ctx, node);\n  ctx.restore();\n};\n\nvar parseColor = function parseColor(hex) {\n  var parsed = colorString.get(hex);\n  var value = colorString.to.hex(parsed.value.slice(0, 3));\n  var opacity = parsed.value[3];\n  return {\n    value: value,\n    opacity: opacity\n  };\n};\n\n/* eslint-disable no-param-reassign */\nvar DEST_REGEXP = /^#.+/;\n\nvar isSrcId$1 = function isSrcId(src) {\n  return src.match(DEST_REGEXP);\n};\n\nvar renderAttachment = function renderAttachment(ctx, attachment) {\n  var _attachment$xOffset = attachment.xOffset,\n      xOffset = _attachment$xOffset === void 0 ? 0 : _attachment$xOffset,\n      _attachment$yOffset = attachment.yOffset,\n      yOffset = _attachment$yOffset === void 0 ? 0 : _attachment$yOffset,\n      width = attachment.width,\n      height = attachment.height,\n      image = attachment.image;\n  ctx.translate(-width + xOffset, -height + yOffset);\n  ctx.image(image, 0, 0, {\n    fit: [width, height],\n    align: 'center',\n    valign: 'bottom'\n  });\n};\n\nvar renderAttachments = function renderAttachments(ctx, run) {\n  ctx.save();\n  var font = run.attributes.font;\n  var space = font.glyphForCodePoint(0x20);\n  var objectReplacement = font.glyphForCodePoint(0xfffc);\n  var attachmentAdvance = 0;\n\n  for (var i = 0; i < run.glyphs.length; i += 1) {\n    var position = run.positions[i];\n    var glyph = run.glyphs[i];\n    attachmentAdvance += position.xAdvance || 0;\n\n    if (glyph.id === objectReplacement.id && run.attributes.attachment) {\n      ctx.translate(attachmentAdvance, position.yOffset || 0);\n      renderAttachment(ctx, run.attributes.attachment);\n      run.glyphs[i] = space;\n      attachmentAdvance = 0;\n    }\n  }\n\n  ctx.restore();\n};\n\nvar renderRun = function renderRun(ctx, run, options) {\n  var _run$attributes = run.attributes,\n      font = _run$attributes.font,\n      fontSize = _run$attributes.fontSize,\n      link = _run$attributes.link;\n  var color = parseColor(run.attributes.color);\n  var opacity = isNil(run.attributes.opacity) ? color.opacity : run.attributes.opacity;\n  var height = run.height,\n      descent = run.descent,\n      xAdvance = run.xAdvance;\n\n  if (options.outlineRuns) {\n    ctx.rect(0, -height, xAdvance, height).stroke();\n  }\n\n  ctx.fillColor(color.value);\n  ctx.fillOpacity(opacity);\n\n  if (link) {\n    if (isSrcId$1(link)) {\n      ctx.goTo(0, -height - descent, xAdvance, height, link.slice(1));\n    } else {\n      ctx.link(0, -height - descent, xAdvance, height, link);\n    }\n  }\n\n  renderAttachments(ctx, run);\n\n  if (font.sbix || font.COLR && font.CPAL) {\n    ctx.save();\n    ctx.translate(0, -run.ascent);\n\n    for (var i = 0; i < run.glyphs.length; i += 1) {\n      var position = run.positions[i];\n      var glyph = run.glyphs[i];\n      ctx.save();\n      ctx.translate(position.xOffset, position.yOffset);\n      glyph.render(ctx, fontSize);\n      ctx.restore();\n      ctx.translate(position.xAdvance, position.yAdvance);\n    }\n\n    ctx.restore();\n  } else {\n    ctx.font(typeof font.name === 'string' ? font.name : font, fontSize);\n\n    try {\n      renderGlyphs(ctx, run.glyphs, run.positions, 0, 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ctx.translate(xAdvance, 0);\n};\n\nvar renderBackground$1 = function renderBackground(ctx, rect, backgroundColor) {\n  var color = parseColor(backgroundColor);\n  ctx.save();\n  ctx.fillOpacity(color.opacity);\n  ctx.rect(rect.x, rect.y, rect.width, rect.height);\n  ctx.fill(color.value);\n  ctx.restore();\n};\n\nvar renderDecorationLine = function renderDecorationLine(ctx, line) {\n  ctx.save();\n  ctx.lineWidth(line.rect.height);\n  ctx.strokeOpacity(line.opacity);\n\n  if (/dashed/.test(line.style)) {\n    ctx.dash(3 * line.rect.height);\n  } else if (/dotted/.test(line.style)) {\n    ctx.dash(line.rect.height);\n  }\n\n  if (/wavy/.test(line.style)) {\n    var dist = Math.max(2, line.rect.height);\n    var step = 1.1 * dist;\n    var stepCount = Math.floor(line.rect.width / (2 * step)); // Adjust step to fill entire width\n\n    var remainingWidth = line.rect.width - stepCount * 2 * step;\n    var adjustment = remainingWidth / stepCount / 2;\n    step += adjustment;\n    var cp1y = line.rect.y + dist;\n    var cp2y = line.rect.y - dist;\n    var x = line.rect.x;\n    ctx.moveTo(line.rect.x, line.rect.y);\n\n    for (var i = 0; i < stepCount; i += 1) {\n      ctx.bezierCurveTo(x + step, cp1y, x + step, cp2y, x + 2 * step, line.rect.y);\n      x += 2 * step;\n    }\n  } else {\n    ctx.moveTo(line.rect.x, line.rect.y);\n    ctx.lineTo(line.rect.x + line.rect.width, line.rect.y);\n\n    if (/double/.test(line.style)) {\n      ctx.moveTo(line.rect.x, line.rect.y + line.rect.height * 2);\n      ctx.lineTo(line.rect.x + line.rect.width, line.rect.y + line.rect.height * 2);\n    }\n  }\n\n  ctx.stroke(line.color);\n  ctx.restore();\n};\n\nvar renderLine = function renderLine(ctx, line, options) {\n  var lineAscent = line.ascent;\n\n  if (options.outlineLines) {\n    ctx.rect(line.box.x, line.box.y, line.box.width, line.box.height).stroke();\n  }\n\n  ctx.save();\n  ctx.translate(line.box.x, line.box.y + lineAscent);\n\n  for (var i = 0; i < line.runs.length; i += 1) {\n    var run = line.runs[i];\n    var isLastRun = i === line.runs.length - 1;\n\n    if (run.attributes.backgroundColor) {\n      var overflowRight = isLastRun ? line.overflowRight : 0;\n      var backgroundRect = {\n        x: 0,\n        y: -lineAscent,\n        height: line.box.height,\n        width: run.xAdvance - overflowRight\n      };\n      renderBackground$1(ctx, backgroundRect, run.attributes.backgroundColor);\n    }\n\n    renderRun(ctx, run, options);\n  }\n\n  ctx.restore();\n  ctx.save();\n  ctx.translate(line.box.x, line.box.y);\n\n  for (var _i = 0; _i < line.decorationLines.length; _i += 1) {\n    var decorationLine = line.decorationLines[_i];\n    renderDecorationLine(ctx, decorationLine);\n  }\n\n  ctx.restore();\n};\n\nvar renderBlock = function renderBlock(ctx, block, options) {\n  block.forEach(function (line) {\n    renderLine(ctx, line, options);\n  });\n};\n\nvar renderText = function renderText(ctx, node) {\n  var _node$box2, _node$box3;\n\n  var _node$box = node.box,\n      top = _node$box.top,\n      left = _node$box.left;\n  var blocks = [node.lines];\n  var paddingTop = ((_node$box2 = node.box) === null || _node$box2 === void 0 ? void 0 : _node$box2.paddingTop) || 0;\n  var paddingLeft = ((_node$box3 = node.box) === null || _node$box3 === void 0 ? void 0 : _node$box3.paddingLeft) || 0;\n  var initialY = node.lines[0] ? node.lines[0].box.y : 0;\n  var offsetX = node.alignOffset || 0;\n  ctx.save();\n  ctx.translate(left + paddingLeft - offsetX, top + paddingTop - initialY);\n  blocks.forEach(function (block) {\n    renderBlock(ctx, block, {});\n  });\n  ctx.restore();\n};\n\nvar renderPage = function renderPage(ctx, node) {\n  var _node$props;\n\n  var _node$box = node.box,\n      width = _node$box.width,\n      height = _node$box.height;\n  var dpi = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.dpi) || 72;\n  var userUnit = dpi / 72;\n  ctx.addPage({\n    size: [width, height],\n    margin: 0,\n    userUnit: userUnit\n  });\n};\n\nvar renderNote = function renderNote(ctx, node) {\n  var _node$children, _node$style, _node$style2;\n\n  var _node$box = node.box,\n      top = _node$box.top,\n      left = _node$box.left;\n  var value = (node === null || node === void 0 ? void 0 : (_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children[0].value) || '';\n  var color = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.backgroundColor) || null;\n  var borderWidth = ((_node$style2 = node.style) === null || _node$style2 === void 0 ? void 0 : _node$style2.borderWidth) || null;\n  ctx.note(left, top, 0, 0, value, {\n    color: color,\n    borderWidth: borderWidth\n  });\n};\n\nvar isNumeric = function isNumeric(n) {\n  return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n};\n\nvar applyContainObjectFit = function applyContainObjectFit(cw, ch, iw, ih, px, py) {\n  var cr = cw / ch;\n  var ir = iw / ih;\n  var pxp = matchPercent(px);\n  var pyp = matchPercent(py);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    var _height = ch;\n\n    var _width = _height * ir;\n\n    var _yOffset = isNumeric(py) ? py : 0;\n\n    var _xOffset = isNumeric(px) ? px : (cw - _width) * pxv;\n\n    return {\n      width: _width,\n      height: _height,\n      xOffset: _xOffset,\n      yOffset: _yOffset\n    };\n  }\n\n  var width = cw;\n  var height = width / ir;\n  var xOffset = isNumeric(px) ? px : 0;\n  var yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n  return {\n    width: width,\n    height: height,\n    yOffset: yOffset,\n    xOffset: xOffset\n  };\n};\n\nvar applyNoneObjectFit = function applyNoneObjectFit(cw, ch, iw, ih, px, py) {\n  var width = iw;\n  var height = ih;\n  var pxp = matchPercent(px);\n  var pyp = matchPercent(py);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n  var xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  var yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n  return {\n    width: width,\n    height: height,\n    xOffset: xOffset,\n    yOffset: yOffset\n  };\n};\n\nvar applyCoverObjectFit = function applyCoverObjectFit(cw, ch, iw, ih, px, py) {\n  var ir = iw / ih;\n  var cr = cw / ch;\n  var pxp = matchPercent(px);\n  var pyp = matchPercent(py);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    var _width2 = cw;\n\n    var _height2 = _width2 / ir;\n\n    var _xOffset2 = isNumeric(px) ? px : 0;\n\n    var _yOffset2 = isNumeric(py) ? py : (ch - _height2) * pyv;\n\n    return {\n      width: _width2,\n      height: _height2,\n      yOffset: _yOffset2,\n      xOffset: _xOffset2\n    };\n  }\n\n  var height = ch;\n  var width = height * ir;\n  var xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  var yOffset = isNumeric(py) ? py : 0;\n  return {\n    width: width,\n    height: height,\n    xOffset: xOffset,\n    yOffset: yOffset\n  };\n};\n\nvar applyScaleDownObjectFit = function applyScaleDownObjectFit(cw, ch, iw, ih, px, py) {\n  var containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  var noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n  return containDimension.width < noneDimension.width ? containDimension : noneDimension;\n};\n\nvar applyFillObjectFit = function applyFillObjectFit(cw, ch, px, py) {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px) ? 0 : px || 0,\n    yOffset: matchPercent(py) ? 0 : py || 0\n  };\n};\n\nvar resolveObjectFit = function resolveObjectFit(type, cw, ch, iw, ih, px, py) {\n  if (type === void 0) {\n    type = 'fill';\n  }\n\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\n\nvar drawImage = function drawImage(ctx, node, options) {\n  var _node$style, _node$style2, _node$style3, _node$style4;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _node$box = node.box,\n      left = _node$box.left,\n      top = _node$box.top;\n  var opacity = (_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.opacity;\n  var objectFit = (_node$style2 = node.style) === null || _node$style2 === void 0 ? void 0 : _node$style2.objectFit;\n  var objectPositionX = (_node$style3 = node.style) === null || _node$style3 === void 0 ? void 0 : _node$style3.objectPositionX;\n  var objectPositionY = (_node$style4 = node.style) === null || _node$style4 === void 0 ? void 0 : _node$style4.objectPositionY;\n  var paddingTop = node.box.paddingTop || 0;\n  var paddingRight = node.box.paddingRight || 0;\n  var paddingBottom = node.box.paddingBottom || 0;\n  var paddingLeft = node.box.paddingLeft || 0;\n  var imageCache = options.imageCache || new Map();\n\n  var _resolveObjectFit = resolveObjectFit(objectFit, node.box.width - paddingLeft - paddingRight, node.box.height - paddingTop - paddingBottom, node.image.width, node.image.height, objectPositionX, objectPositionY),\n      width = _resolveObjectFit.width,\n      height = _resolveObjectFit.height,\n      xOffset = _resolveObjectFit.xOffset,\n      yOffset = _resolveObjectFit.yOffset;\n\n  if (node.image.data) {\n    if (width !== 0 && height !== 0) {\n      var cacheKey = node.image.key;\n      var image = imageCache.get(cacheKey) || ctx.embedImage(node.image.data);\n      if (cacheKey) imageCache.set(cacheKey, image);\n      var imageOpacity = isNil(opacity) ? 1 : opacity;\n      ctx.fillOpacity(imageOpacity).image(image, left + paddingLeft + xOffset, top + paddingTop + yOffset, {\n        width: width,\n        height: height\n      });\n    } else {\n      console.warn(\"Image with src '\" + JSON.stringify(node.props.src) + \"' skipped due to invalid dimensions\");\n    }\n  }\n};\n\nvar renderImage = function renderImage(ctx, node, options) {\n  ctx.save();\n  clipNode(ctx, node);\n  drawImage(ctx, node, options);\n  ctx.restore();\n};\n\nvar CONTENT_COLOR = '#a1c6e7';\nvar PADDING_COLOR = '#c4deb9';\nvar MARGIN_COLOR = '#f8cca1'; // TODO: Draw debug boxes using clipping to enhance quality\n\nvar debugContent = function debugContent(ctx, node) {\n  var _node$box = node.box,\n      left = _node$box.left,\n      top = _node$box.top,\n      width = _node$box.width,\n      height = _node$box.height,\n      _node$box$paddingLeft = _node$box.paddingLeft,\n      paddingLeft = _node$box$paddingLeft === void 0 ? 0 : _node$box$paddingLeft,\n      _node$box$paddingTop = _node$box.paddingTop,\n      paddingTop = _node$box$paddingTop === void 0 ? 0 : _node$box$paddingTop,\n      _node$box$paddingRigh = _node$box.paddingRight,\n      paddingRight = _node$box$paddingRigh === void 0 ? 0 : _node$box$paddingRigh,\n      _node$box$paddingBott = _node$box.paddingBottom,\n      paddingBottom = _node$box$paddingBott === void 0 ? 0 : _node$box$paddingBott,\n      _node$box$borderLeftW = _node$box.borderLeftWidth,\n      borderLeftWidth = _node$box$borderLeftW === void 0 ? 0 : _node$box$borderLeftW,\n      _node$box$borderTopWi = _node$box.borderTopWidth,\n      borderTopWidth = _node$box$borderTopWi === void 0 ? 0 : _node$box$borderTopWi,\n      _node$box$borderRight = _node$box.borderRightWidth,\n      borderRightWidth = _node$box$borderRight === void 0 ? 0 : _node$box$borderRight,\n      _node$box$borderBotto = _node$box.borderBottomWidth,\n      borderBottomWidth = _node$box$borderBotto === void 0 ? 0 : _node$box$borderBotto;\n  ctx.fillColor(CONTENT_COLOR).opacity(0.5).rect(left + paddingLeft + borderLeftWidth, top + paddingTop + borderTopWidth, width - paddingLeft - paddingRight - borderRightWidth - borderLeftWidth, height - paddingTop - paddingBottom - borderTopWidth - borderBottomWidth).fill();\n};\n\nvar debugPadding = function debugPadding(ctx, node) {\n  var _node$box2 = node.box,\n      left = _node$box2.left,\n      top = _node$box2.top,\n      width = _node$box2.width,\n      height = _node$box2.height,\n      _node$box2$paddingLef = _node$box2.paddingLeft,\n      paddingLeft = _node$box2$paddingLef === void 0 ? 0 : _node$box2$paddingLef,\n      _node$box2$paddingTop = _node$box2.paddingTop,\n      paddingTop = _node$box2$paddingTop === void 0 ? 0 : _node$box2$paddingTop,\n      _node$box2$paddingRig = _node$box2.paddingRight,\n      paddingRight = _node$box2$paddingRig === void 0 ? 0 : _node$box2$paddingRig,\n      _node$box2$paddingBot = _node$box2.paddingBottom,\n      paddingBottom = _node$box2$paddingBot === void 0 ? 0 : _node$box2$paddingBot,\n      _node$box2$borderLeft = _node$box2.borderLeftWidth,\n      borderLeftWidth = _node$box2$borderLeft === void 0 ? 0 : _node$box2$borderLeft,\n      _node$box2$borderTopW = _node$box2.borderTopWidth,\n      borderTopWidth = _node$box2$borderTopW === void 0 ? 0 : _node$box2$borderTopW,\n      _node$box2$borderRigh = _node$box2.borderRightWidth,\n      borderRightWidth = _node$box2$borderRigh === void 0 ? 0 : _node$box2$borderRigh,\n      _node$box2$borderBott = _node$box2.borderBottomWidth,\n      borderBottomWidth = _node$box2$borderBott === void 0 ? 0 : _node$box2$borderBott;\n  ctx.fillColor(PADDING_COLOR).opacity(0.5); // Padding top\n\n  ctx.rect(left + paddingLeft + borderLeftWidth, top + borderTopWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingTop).fill(); // Padding left\n\n  ctx.rect(left + borderLeftWidth, top + borderTopWidth, paddingLeft, height - borderTopWidth - borderBottomWidth).fill(); // Padding right\n\n  ctx.rect(left + width - paddingRight - borderRightWidth, top + borderTopWidth, paddingRight, height - borderTopWidth - borderBottomWidth).fill(); // Padding bottom\n\n  ctx.rect(left + paddingLeft + borderLeftWidth, top + height - paddingBottom - borderBottomWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingBottom).fill();\n};\n\nvar getMargin = function getMargin(box) {\n  var marginLeft = box.marginLeft === 'auto' ? 0 : box.marginLeft;\n  var marginTop = box.marginTop === 'auto' ? 0 : box.marginTop;\n  var marginRight = box.marginRight === 'auto' ? 0 : box.marginRight;\n  var marginBottom = box.marginBottom === 'auto' ? 0 : box.marginBottom;\n  return {\n    marginLeft: marginLeft,\n    marginTop: marginTop,\n    marginRight: marginRight,\n    marginBottom: marginBottom\n  };\n};\n\nvar debugMargin = function debugMargin(ctx, node) {\n  var _node$box3 = node.box,\n      left = _node$box3.left,\n      top = _node$box3.top,\n      width = _node$box3.width,\n      height = _node$box3.height;\n\n  var _getMargin = getMargin(node.box),\n      _getMargin$marginLeft = _getMargin.marginLeft,\n      marginLeft = _getMargin$marginLeft === void 0 ? 0 : _getMargin$marginLeft,\n      _getMargin$marginTop = _getMargin.marginTop,\n      marginTop = _getMargin$marginTop === void 0 ? 0 : _getMargin$marginTop,\n      _getMargin$marginRigh = _getMargin.marginRight,\n      marginRight = _getMargin$marginRigh === void 0 ? 0 : _getMargin$marginRigh,\n      _getMargin$marginBott = _getMargin.marginBottom,\n      marginBottom = _getMargin$marginBott === void 0 ? 0 : _getMargin$marginBott;\n\n  ctx.fillColor(MARGIN_COLOR).opacity(0.5); // Margin top\n\n  ctx.rect(left, top - marginTop, width, marginTop).fill(); // Margin left\n\n  ctx.rect(left - marginLeft, top - marginTop, marginLeft, height + marginTop + marginBottom).fill(); // Margin right\n\n  ctx.rect(left + width, top - marginTop, marginRight, height + marginTop + marginBottom).fill(); // Margin bottom\n\n  ctx.rect(left, top + height, width, marginBottom).fill();\n};\n\nvar debugText = function debugText(ctx, node) {\n  var _node$box4 = node.box,\n      left = _node$box4.left,\n      top = _node$box4.top,\n      width = _node$box4.width,\n      height = _node$box4.height;\n\n  var _getMargin2 = getMargin(node.box),\n      _getMargin2$marginLef = _getMargin2.marginLeft,\n      marginLeft = _getMargin2$marginLef === void 0 ? 0 : _getMargin2$marginLef,\n      _getMargin2$marginTop = _getMargin2.marginTop,\n      marginTop = _getMargin2$marginTop === void 0 ? 0 : _getMargin2$marginTop,\n      _getMargin2$marginRig = _getMargin2.marginRight,\n      marginRight = _getMargin2$marginRig === void 0 ? 0 : _getMargin2$marginRig,\n      _getMargin2$marginBot = _getMargin2.marginBottom,\n      marginBottom = _getMargin2$marginBot === void 0 ? 0 : _getMargin2$marginBot;\n\n  var roundedWidth = Math.round(width + marginLeft + marginRight);\n  var roundedHeight = Math.round(height + marginTop + marginBottom);\n  ctx.fontSize(6).opacity(1).fillColor('black').text(roundedWidth + \" x \" + roundedHeight, left - marginLeft, Math.max(top - marginTop - 4, 1));\n};\n\nvar debugOrigin = function debugOrigin(ctx, node) {\n  if (node.origin) {\n    ctx.circle(node.origin.left, node.origin.top, 3).fill('red').circle(node.origin.left, node.origin.top, 5).stroke('red');\n  }\n};\n\nvar renderDebug = function renderDebug(ctx, node) {\n  var _node$props;\n\n  if (!((_node$props = node.props) !== null && _node$props !== void 0 && _node$props.debug)) return;\n  ctx.save();\n  debugContent(ctx, node);\n  debugPadding(ctx, node);\n  debugMargin(ctx, node);\n  debugText(ctx, node);\n  debugOrigin(ctx, node);\n  ctx.restore();\n};\n\nvar availableMethods = ['dash', 'clip', 'save', 'path', 'fill', 'font', 'text', 'rect', 'scale', 'moveTo', 'lineTo', 'stroke', 'rotate', 'circle', 'lineCap', 'opacity', 'ellipse', 'polygon', 'restore', 'lineJoin', 'fontSize', 'fillColor', 'lineWidth', 'translate', 'miterLimit', 'strokeColor', 'fillOpacity', 'roundedRect', 'fillAndStroke', 'strokeOpacity', 'bezierCurveTo', 'quadraticCurveTo', 'linearGradient', 'radialGradient'];\n\nvar painter = function painter(ctx) {\n  var p = availableMethods.reduce(function (acc, prop) {\n    var _extends2;\n\n    return _extends({}, acc, (_extends2 = {}, _extends2[prop] = function () {\n      ctx[prop].apply(ctx, arguments);\n      return p;\n    }, _extends2));\n  }, {});\n  return p;\n};\n\nvar renderCanvas = function renderCanvas(ctx, node) {\n  var _node$box = node.box,\n      top = _node$box.top,\n      left = _node$box.left,\n      width = _node$box.width,\n      height = _node$box.height;\n  var paddingTop = node.box.paddingTop || 0;\n  var paddingLeft = node.box.paddingLeft || 0;\n  var paddingRight = node.box.paddingRight || 0;\n  var paddingBottom = node.box.paddingBottom || 0;\n  var availableWidth = width - paddingLeft - paddingRight;\n  var availableHeight = height - paddingTop - paddingBottom;\n\n  if (!availableWidth || !availableHeight) {\n    console.warn('Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.');\n  }\n\n  ctx.save().translate(left + paddingLeft, top + paddingTop);\n\n  if (node.props.paint) {\n    node.props.paint(painter(ctx), availableWidth, availableHeight);\n  }\n\n  ctx.restore();\n};\n\n// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nvar KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nvar clipBorderTop = function clipBorderTop(ctx, layout, style, rtr, rtl) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n      borderRightWidth = style.borderRightWidth,\n      borderLeftWidth = style.borderLeftWidth; // Clip outer top border edge\n\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top); // Ellipse coefficients outer top right cap\n\n  var c0 = rtr * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + width - c0, top, left + width, top + c0, left + width, top + rtr); // Move down in case the margin exceedes the radius\n\n  var topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord); // Clip inner top right cap\n\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord); // Ellipse coefficients inner top right cap\n\n  var innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  var innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  var c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  var c2 = innerTopRightRadiusY * (1.0 - KAPPA); // Clip inner top right cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth, top + borderTopWidth + c2, left + width - borderRightWidth - c1, top + borderTopWidth, left + width - borderRightWidth - innerTopRightRadiusX, top + borderTopWidth); // Clip inner top border edge\n\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth); // Ellipse coefficients inner top left cap\n\n  var innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  var innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  var c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  var c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  var topLeftYCoord = top + Math.max(borderTopWidth, rtl); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth + c3, top + borderTopWidth, left + borderLeftWidth, top + borderTopWidth + c4, left + borderLeftWidth, topLeftYCoord);\n  ctx.lineTo(left, topLeftYCoord); // Move down in case the margin exceedes the radius\n\n  ctx.lineTo(left, top + rtl); // Ellipse coefficients outer top left cap\n\n  var c5 = rtl * (1.0 - KAPPA); // Clip outer top left cap\n\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip(); // Clip border top cap joins\n\n  if (borderRightWidth) {\n    var trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    var _trSlope = -borderTopWidth / borderLeftWidth;\n\n    ctx.moveTo(left + width / 2, _trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nvar fillBorderTop = function fillBorderTop(ctx, layout, style, rtr, rtl) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width;\n  var borderTopColor = style.borderTopColor,\n      borderTopWidth = style.borderTopWidth,\n      borderTopStyle = style.borderTopStyle,\n      borderRightWidth = style.borderRightWidth,\n      borderLeftWidth = style.borderLeftWidth;\n  var c0 = rtl * (1.0 - KAPPA);\n  var c1 = rtr * (1.0 - KAPPA);\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - c1, top, left + width, top + c1, left + width, top + rtr);\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2);\n\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, {\n      space: borderTopWidth * 1.2\n    });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, {\n      space: borderTopWidth * 1.2\n    });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nvar clipBorderRight = function clipBorderRight(ctx, layout, style, rtr, rbr) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n      borderRightWidth = style.borderRightWidth,\n      borderBottomWidth = style.borderBottomWidth; // Clip outer right border edge\n\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr); // Ellipse coefficients outer bottom right cap\n\n  var c0 = rbr * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + width, top + height - c0, left + width - c0, top + height, left + width - rbr, top + height); // Move left in case the margin exceedes the radius\n\n  var topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height); // Clip inner bottom right cap\n\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth); // Ellipse coefficients inner bottom right cap\n\n  var innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  var innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  var c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  var c2 = innerBottomRightRadiusY * (1.0 - KAPPA); // Clip inner top right cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth - c1, top + height - borderBottomWidth, left + width - borderRightWidth, top + height - borderBottomWidth - c2, left + width - borderRightWidth, top + height - Math.max(rbr, borderBottomWidth)); // Clip inner right border edge\n\n  ctx.lineTo(left + width - borderRightWidth, top + Math.max(rtr, borderTopWidth)); // Ellipse coefficients inner top right cap\n\n  var innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  var innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  var c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  var c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  var topRightXCoord = left + width - Math.max(rtr, borderRightWidth); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth, top + borderTopWidth + c4, left + width - borderRightWidth - c3, top + borderTopWidth, topRightXCoord, top + borderTopWidth);\n  ctx.lineTo(topRightXCoord, top); // Move right in case the margin exceedes the radius\n\n  ctx.lineTo(left + width - rtr, top); // Ellipse coefficients outer top right cap\n\n  var c5 = rtr * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + width - c5, top, left + width, top + c5, left + width, top + rtr);\n  ctx.closePath();\n  ctx.clip(); // Clip border right cap joins\n\n  if (borderTopWidth) {\n    var trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    var brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nvar fillBorderRight = function fillBorderRight(ctx, layout, style, rtr, rbr) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderRightColor = style.borderRightColor,\n      borderRightStyle = style.borderRightStyle,\n      borderRightWidth = style.borderRightWidth,\n      borderTopWidth = style.borderTopWidth,\n      borderBottomWidth = style.borderBottomWidth;\n  var c0 = rbr * (1.0 - KAPPA);\n  var c1 = rtr * (1.0 - KAPPA);\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - c1, top, left + width, top + c1, left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - c0, left + width - c0, top + height, left + width - rbr, top + height);\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2);\n\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, {\n      space: borderRightWidth * 1.2\n    });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, {\n      space: borderRightWidth * 1.2\n    });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nvar clipBorderBottom = function clipBorderBottom(ctx, layout, style, rbl, rbr) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderBottomWidth = style.borderBottomWidth,\n      borderRightWidth = style.borderRightWidth,\n      borderLeftWidth = style.borderLeftWidth; // Clip outer top border edge\n\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height); // Ellipse coefficients outer top right cap\n\n  var c0 = rbl * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl); // Move up in case the margin exceedes the radius\n\n  var bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord); // Clip inner bottom left cap\n\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord); // Ellipse coefficients inner top right cap\n\n  var innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  var innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  var c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  var c2 = innerBottomLeftRadiusY * (1.0 - KAPPA); // Clip inner bottom left cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth, top + height - borderBottomWidth - c2, left + borderLeftWidth + c1, top + height - borderBottomWidth, left + borderLeftWidth + innerBottomLeftRadiusX, top + height - borderBottomWidth); // Clip inner bottom border edge\n\n  ctx.lineTo(left + width - Math.max(rbr, borderRightWidth), top + height - borderBottomWidth); // Ellipse coefficients inner top left cap\n\n  var innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  var innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  var c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  var c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  var bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + width - borderRightWidth - c3, top + height - borderBottomWidth, left + width - borderRightWidth, top + height - borderBottomWidth - c4, left + width - borderRightWidth, bottomRightYCoord);\n  ctx.lineTo(left + width, bottomRightYCoord); // Move down in case the margin exceedes the radius\n\n  ctx.lineTo(left + width, top + height - rbr); // Ellipse coefficients outer top left cap\n\n  var c5 = rbr * (1.0 - KAPPA); // Clip outer top left cap\n\n  ctx.bezierCurveTo(left + width, top + height - c5, left + width - c5, top + height, left + width - rbr, top + height);\n  ctx.closePath();\n  ctx.clip(); // Clip border bottom cap joins\n\n  if (borderRightWidth) {\n    var brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    var trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nvar fillBorderBottom = function fillBorderBottom(ctx, layout, style, rbl, rbr) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderBottomColor = style.borderBottomColor,\n      borderBottomStyle = style.borderBottomStyle,\n      borderBottomWidth = style.borderBottomWidth,\n      borderRightWidth = style.borderRightWidth,\n      borderLeftWidth = style.borderLeftWidth;\n  var c0 = rbl * (1.0 - KAPPA);\n  var c1 = rbr * (1.0 - KAPPA);\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - c1, left + width - c1, top + height, left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2);\n\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, {\n      space: borderBottomWidth * 1.2\n    });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, {\n      space: borderBottomWidth * 1.2\n    });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nvar clipBorderLeft = function clipBorderLeft(ctx, layout, style, rbl, rtl) {\n  var top = layout.top,\n      left = layout.left,\n      width = layout.width,\n      height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n      borderLeftWidth = style.borderLeftWidth,\n      borderBottomWidth = style.borderBottomWidth; // Clip outer left border edge\n\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl); // Ellipse coefficients outer top left cap\n\n  var c0 = rtl * (1.0 - KAPPA); // Clip outer top left cap\n\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top); // Move right in case the margin exceedes the radius\n\n  var topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top); // Clip inner top left cap\n\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth); // Ellipse coefficients inner top left cap\n\n  var innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  var innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  var c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  var c2 = innerTopLeftRadiusY * (1.0 - KAPPA); // Clip inner top right cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth + c1, top + borderTopWidth, left + borderLeftWidth, top + borderTopWidth + c2, left + borderLeftWidth, top + Math.max(rtl, borderTopWidth)); // Clip inner left border edge\n\n  ctx.lineTo(left + borderLeftWidth, top + height - Math.max(rbl, borderBottomWidth)); // Ellipse coefficients inner bottom left cap\n\n  var innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  var innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  var c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  var c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  var bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth); // Clip inner top left cap\n\n  ctx.bezierCurveTo(left + borderLeftWidth, top + height - borderBottomWidth - c4, left + borderLeftWidth + c3, top + height - borderBottomWidth, bottomLeftXCoord, top + height - borderBottomWidth);\n  ctx.lineTo(bottomLeftXCoord, top + height); // Move left in case the margin exceedes the radius\n\n  ctx.lineTo(left + rbl, top + height); // Ellipse coefficients outer top right cap\n\n  var c5 = rbl * (1.0 - KAPPA); // Clip outer top right cap\n\n  ctx.bezierCurveTo(left + c5, top + height, left, top + height - c5, left, top + height - rbl);\n  ctx.closePath();\n  ctx.clip(); // Clip border right cap joins\n\n  if (borderBottomWidth) {\n    var trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    var _trSlope2 = -borderTopWidth / borderLeftWidth;\n\n    ctx.moveTo(left + width / 2, _trSlope2 * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nvar fillBorderLeft = function fillBorderLeft(ctx, layout, style, rbl, rtl) {\n  var top = layout.top,\n      left = layout.left,\n      height = layout.height;\n  var borderLeftColor = style.borderLeftColor,\n      borderLeftStyle = style.borderLeftStyle,\n      borderLeftWidth = style.borderLeftWidth,\n      borderTopWidth = style.borderTopWidth,\n      borderBottomWidth = style.borderBottomWidth;\n  var c0 = rbl * (1.0 - KAPPA);\n  var c1 = rtl * (1.0 - KAPPA);\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2);\n\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, {\n      space: borderLeftWidth * 1.2\n    });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, {\n      space: borderLeftWidth * 1.2\n    });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nvar shouldRenderBorders = function shouldRenderBorders(node) {\n  return node.box && (node.box.borderTopWidth || node.box.borderRightWidth || node.box.borderBottomWidth || node.box.borderLeftWidth);\n};\n\nvar renderBorders = function renderBorders(ctx, node) {\n  if (!shouldRenderBorders(node)) return;\n  var _node$box = node.box,\n      width = _node$box.width,\n      height = _node$box.height,\n      borderTopWidth = _node$box.borderTopWidth,\n      borderLeftWidth = _node$box.borderLeftWidth,\n      borderRightWidth = _node$box.borderRightWidth,\n      borderBottomWidth = _node$box.borderBottomWidth;\n  var _node$style = node.style,\n      opacity = _node$style.opacity,\n      _node$style$borderTop = _node$style.borderTopLeftRadius,\n      borderTopLeftRadius = _node$style$borderTop === void 0 ? 0 : _node$style$borderTop,\n      _node$style$borderTop2 = _node$style.borderTopRightRadius,\n      borderTopRightRadius = _node$style$borderTop2 === void 0 ? 0 : _node$style$borderTop2,\n      _node$style$borderBot = _node$style.borderBottomLeftRadius,\n      borderBottomLeftRadius = _node$style$borderBot === void 0 ? 0 : _node$style$borderBot,\n      _node$style$borderBot2 = _node$style.borderBottomRightRadius,\n      borderBottomRightRadius = _node$style$borderBot2 === void 0 ? 0 : _node$style$borderBot2,\n      _node$style$borderTop3 = _node$style.borderTopColor,\n      borderTopColor = _node$style$borderTop3 === void 0 ? 'black' : _node$style$borderTop3,\n      _node$style$borderTop4 = _node$style.borderTopStyle,\n      borderTopStyle = _node$style$borderTop4 === void 0 ? 'solid' : _node$style$borderTop4,\n      _node$style$borderLef = _node$style.borderLeftColor,\n      borderLeftColor = _node$style$borderLef === void 0 ? 'black' : _node$style$borderLef,\n      _node$style$borderLef2 = _node$style.borderLeftStyle,\n      borderLeftStyle = _node$style$borderLef2 === void 0 ? 'solid' : _node$style$borderLef2,\n      _node$style$borderRig = _node$style.borderRightColor,\n      borderRightColor = _node$style$borderRig === void 0 ? 'black' : _node$style$borderRig,\n      _node$style$borderRig2 = _node$style.borderRightStyle,\n      borderRightStyle = _node$style$borderRig2 === void 0 ? 'solid' : _node$style$borderRig2,\n      _node$style$borderBot3 = _node$style.borderBottomColor,\n      borderBottomColor = _node$style$borderBot3 === void 0 ? 'black' : _node$style$borderBot3,\n      _node$style$borderBot4 = _node$style.borderBottomStyle,\n      borderBottomStyle = _node$style$borderBot4 === void 0 ? 'solid' : _node$style$borderBot4;\n  var style = {\n    borderTopColor: borderTopColor,\n    borderTopWidth: borderTopWidth,\n    borderTopStyle: borderTopStyle,\n    borderLeftColor: borderLeftColor,\n    borderLeftWidth: borderLeftWidth,\n    borderLeftStyle: borderLeftStyle,\n    borderRightColor: borderRightColor,\n    borderRightWidth: borderRightWidth,\n    borderRightStyle: borderRightStyle,\n    borderBottomColor: borderBottomColor,\n    borderBottomWidth: borderBottomWidth,\n    borderBottomStyle: borderBottomStyle,\n    borderTopLeftRadius: borderTopLeftRadius,\n    borderTopRightRadius: borderTopRightRadius,\n    borderBottomLeftRadius: borderBottomLeftRadius,\n    borderBottomRightRadius: borderBottomRightRadius\n  };\n  var rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  var rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  var rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  var rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n  ctx.save();\n  ctx.strokeOpacity(opacity);\n\n  if (borderTopWidth) {\n    ctx.save();\n    clipBorderTop(ctx, node.box, style, rtr, rtl);\n    fillBorderTop(ctx, node.box, style, rtr, rtl);\n    ctx.restore();\n  }\n\n  if (borderRightWidth) {\n    ctx.save();\n    clipBorderRight(ctx, node.box, style, rtr, rbr);\n    fillBorderRight(ctx, node.box, style, rtr, rbr);\n    ctx.restore();\n  }\n\n  if (borderBottomWidth) {\n    ctx.save();\n    clipBorderBottom(ctx, node.box, style, rbl, rbr);\n    fillBorderBottom(ctx, node.box, style, rbl, rbr);\n    ctx.restore();\n  }\n\n  if (borderLeftWidth) {\n    ctx.save();\n    clipBorderLeft(ctx, node.box, style, rbl, rtl);\n    fillBorderLeft(ctx, node.box, style, rbl, rtl);\n    ctx.restore();\n  }\n\n  ctx.restore();\n};\n\nvar drawBackground = function drawBackground(ctx, node) {\n  var _node$style;\n\n  var _node$box = node.box,\n      top = _node$box.top,\n      left = _node$box.left,\n      width = _node$box.width,\n      height = _node$box.height;\n  var color = parseColor(node.style.backgroundColor);\n  var nodeOpacity = isNil((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.opacity) ? 1 : node.style.opacity;\n  var opacity = Math.min(color.opacity, nodeOpacity);\n  ctx.fillOpacity(opacity).fillColor(color.value).rect(left, top, width, height).fill();\n};\n\nvar renderBackground = function renderBackground(ctx, node) {\n  var _node$style2;\n\n  var hasBackground = !!node.box && !!((_node$style2 = node.style) !== null && _node$style2 !== void 0 && _node$style2.backgroundColor);\n\n  if (hasBackground) {\n    ctx.save();\n    clipNode(ctx, node);\n    drawBackground(ctx, node);\n    ctx.restore();\n  }\n};\n\nvar isSrcId = function isSrcId(value) {\n  return /^#.+/.test(value);\n};\n\nvar setLink = function setLink(ctx, node) {\n  var props = node.props || {};\n  var _node$box = node.box,\n      top = _node$box.top,\n      left = _node$box.left,\n      width = _node$box.width,\n      height = _node$box.height;\n  var src = props.src || props.href;\n\n  if (src) {\n    var isId = isSrcId(src);\n    var method = isId ? 'goTo' : 'link';\n    var value = isId ? src.slice(1) : src;\n    ctx[method](left, top, width, height, value);\n  }\n};\n\nvar setDestination = function setDestination(ctx, node) {\n  var _node$props;\n\n  if ((_node$props = node.props) !== null && _node$props !== void 0 && _node$props.id) {\n    ctx.addNamedDestination(node.props.id, 'XYZ', null, node.box.top, null);\n  }\n};\n\nvar _renderFns;\n\nvar isRecursiveNode = function isRecursiveNode(node) {\n  return node.type !== P.Text && node.type !== P.Svg;\n};\n\nvar renderChildren = function renderChildren(ctx, node, options) {\n  ctx.save();\n\n  if (node.box) {\n    ctx.translate(node.box.left, node.box.top);\n  }\n\n  var children = node.children || [];\n\n  var renderChild = function renderChild(child) {\n    return renderNode(ctx, child, options);\n  };\n\n  children.forEach(renderChild);\n  ctx.restore();\n};\n\nvar renderFns = (_renderFns = {}, _renderFns[P.Text] = renderText, _renderFns[P.Note] = renderNote, _renderFns[P.Image] = renderImage, _renderFns[P.Canvas] = renderCanvas, _renderFns[P.Svg] = renderSvg, _renderFns[P.Link] = setLink, _renderFns);\n\nvar renderNode = function renderNode(ctx, node, options) {\n  var _node$style;\n\n  var overflowHidden = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.overflow) === 'hidden';\n  var shouldRenderChildren = isRecursiveNode(node);\n  if (node.type === P.Page) renderPage(ctx, node);\n  ctx.save();\n  if (overflowHidden) clipNode(ctx, node);\n  applyTransformations(ctx, node);\n  renderBackground(ctx, node);\n  renderBorders(ctx, node);\n  var renderFn = renderFns[node.type];\n  if (renderFn) renderFn(ctx, node, options);\n  if (shouldRenderChildren) renderChildren(ctx, node, options);\n  setDestination(ctx, node);\n  renderDebug(ctx, node);\n  ctx.restore();\n};\n\n/* eslint-disable no-param-reassign */\nvar setPDFMetadata = function setPDFMetadata(target) {\n  return function (key, value) {\n    if (value) target.info[key] = value;\n  };\n};\n/**\n * Set document instance metadata\n *\n * @param {Object} ctx document instance\n * @param {Object} doc document root\n */\n\n\nvar addMetadata = function addMetadata(ctx, doc) {\n  var setProp = setPDFMetadata(ctx);\n  var props = doc.props || {};\n  var title = props.title || null;\n  var author = props.author || null;\n  var subject = props.subject || null;\n  var keywords = props.keywords || null;\n  var creator = props.creator || 'react-pdf';\n  var producer = props.producer || 'react-pdf';\n  setProp('Title', title);\n  setProp('Author', author);\n  setProp('Subject', subject);\n  setProp('Keywords', keywords);\n  setProp('Creator', creator);\n  setProp('Producer', producer);\n};\n\n/* eslint-disable no-param-reassign */\nvar addNodeBookmark = function addNodeBookmark(ctx, node, pageNumber, registry) {\n  var _node$props;\n\n  var bookmark = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.bookmark;\n\n  if (bookmark) {\n    var title = bookmark.title,\n        parent = bookmark.parent,\n        expanded = bookmark.expanded,\n        zoom = bookmark.zoom,\n        fit = bookmark.fit;\n    var outline = registry[parent] || ctx.outline;\n    var top = bookmark.top || node.box.top;\n    var left = bookmark.left || node.box.left;\n    var instance = outline.addItem(title, {\n      pageNumber: pageNumber,\n      expanded: expanded,\n      top: top,\n      left: left,\n      zoom: zoom,\n      fit: fit\n    });\n    registry[bookmark.ref] = instance;\n  }\n\n  if (!node.children) return;\n  node.children.forEach(function (child) {\n    return addNodeBookmark(ctx, child, pageNumber, registry);\n  });\n};\n\nvar addBookmarks = function addBookmarks(ctx, root) {\n  var registry = {};\n  var pages = root.children || [];\n  pages.forEach(function (page, i) {\n    addNodeBookmark(ctx, page, i, registry);\n  });\n};\n\nvar render = function render(ctx, doc) {\n  var pages = doc.children || [];\n  var options = {\n    imageCache: new Map()\n  };\n  addMetadata(ctx, doc);\n  pages.forEach(function (page) {\n    return renderNode(ctx, page, options);\n  });\n  addBookmarks(ctx, doc);\n  ctx.end();\n  return ctx;\n};\n\nexport { render as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}