{"ast":null,"code":"import { Base } from './Base.js';\nimport { Number as NumberT } from './Number.js';\nimport * as utils from './utils.js';\nclass StringT extends Base {\n  constructor(length) {\n    let encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ascii';\n    super();\n    this.length = length;\n    this.encoding = encoding;\n  }\n  decode(stream, parent) {\n    let length, pos;\n    if (this.length != null) {\n      length = utils.resolveLength(this.length, stream, parent);\n    } else {\n      let buffer;\n      ({\n        buffer,\n        length,\n        pos\n      } = stream);\n      while (pos < length && buffer[pos] !== 0x00) {\n        ++pos;\n      }\n      length = pos - stream.pos;\n    }\n    let {\n      encoding\n    } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent, parent) || 'ascii';\n    }\n    const string = stream.readString(length, encoding);\n    if (this.length == null && stream.pos < stream.length) {\n      stream.pos++;\n    }\n    return string;\n  }\n  size(val, parent) {\n    // Use the defined value if no value was given\n    if (!val) {\n      return utils.resolveLength(this.length, null, parent);\n    }\n    let {\n      encoding\n    } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';\n    }\n    if (encoding === 'utf16be') {\n      encoding = 'utf16le';\n    }\n    let size = byteLength(val, encoding);\n    if (this.length instanceof NumberT) {\n      size += this.length.size();\n    }\n    if (this.length == null) {\n      size++;\n    }\n    return size;\n  }\n  encode(stream, val, parent) {\n    let {\n      encoding\n    } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';\n    }\n    if (this.length instanceof NumberT) {\n      this.length.encode(stream, byteLength(val, encoding));\n    }\n    stream.writeString(val, encoding);\n    if (this.length == null) {\n      return stream.writeUInt8(0x00);\n    }\n  }\n}\nfunction byteLength(string, encoding) {\n  switch (encoding) {\n    case 'ascii':\n      return string.length;\n    case 'utf8':\n      let len = 0;\n      for (let i = 0; i < string.length; i++) {\n        let c = string.charCodeAt(i);\n        if (c >= 0xd800 && c <= 0xdbff && i < string.length - 1) {\n          let c2 = string.charCodeAt(++i);\n          if ((c2 & 0xfc00) === 0xdc00) {\n            c = ((c & 0x3ff) << 10) + (c2 & 0x3ff) + 0x10000;\n          } else {\n            // unmatched surrogate.\n            i--;\n          }\n        }\n        if ((c & 0xffffff80) === 0) {\n          len++;\n        } else if ((c & 0xfffff800) === 0) {\n          len += 2;\n        } else if ((c & 0xffff0000) === 0) {\n          len += 3;\n        } else if ((c & 0xffe00000) === 0) {\n          len += 4;\n        }\n      }\n      return len;\n    case 'utf16le':\n    case 'utf16-le':\n    case 'utf16be':\n    case 'utf16-be':\n    case 'ucs2':\n      return string.length * 2;\n    default:\n      throw new Error('Unknown encoding ' + encoding);\n  }\n}\nexport { StringT as String };","map":{"version":3,"names":["Base","Number","NumberT","utils","StringT","constructor","length","encoding","decode","stream","parent","pos","resolveLength","buffer","call","string","readString","size","val","undefined","byteLength","encode","writeString","writeUInt8","len","i","c","charCodeAt","c2","Error","String"],"sources":["C:/Users/Abdullah/Desktop/Project/TTP-Project/client/node_modules/restructure/src/String.js"],"sourcesContent":["import {Base} from './Base.js';\nimport {Number as NumberT} from './Number.js';\nimport * as utils from './utils.js';\n\nclass StringT extends Base {\n  constructor(length, encoding = 'ascii') {\n    super();\n    this.length = length;\n    this.encoding = encoding;\n  }\n\n  decode(stream, parent) {\n    let length, pos;\n\n    if (this.length != null) {\n      length = utils.resolveLength(this.length, stream, parent);\n    } else {\n      let buffer;\n      ({buffer, length, pos} = stream);\n\n      while ((pos < length) && (buffer[pos] !== 0x00)) {\n        ++pos;\n      }\n\n      length = pos - stream.pos;\n    }\n\n    let { encoding } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent, parent) || 'ascii';\n    }\n\n    const string = stream.readString(length, encoding);\n\n    if ((this.length == null) && (stream.pos < stream.length)) {\n      stream.pos++;\n    }\n\n    return string;\n  }\n\n  size(val, parent) {\n    // Use the defined value if no value was given\n    if (!val) {\n      return utils.resolveLength(this.length, null, parent);\n    }\n\n    let { encoding } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';\n    }\n\n    if (encoding === 'utf16be') {\n      encoding = 'utf16le';\n    }\n\n    let size = byteLength(val, encoding);\n    if (this.length instanceof NumberT) {\n      size += this.length.size();\n    }\n\n    if ((this.length == null)) {\n      size++;\n    }\n\n    return size;\n  }\n\n  encode(stream, val, parent) {\n    let { encoding } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';\n    }\n\n    if (this.length instanceof NumberT) {\n      this.length.encode(stream, byteLength(val, encoding));\n    }\n\n    stream.writeString(val, encoding);\n\n    if ((this.length == null)) {\n      return stream.writeUInt8(0x00);\n    }\n  }\n}\n\nfunction byteLength(string, encoding) {\n  switch (encoding) {\n    case 'ascii':\n      return string.length;\n    case 'utf8':\n      let len = 0;\n      for (let i = 0; i < string.length; i++) {\n        let c = string.charCodeAt(i);\n\n        if (c >= 0xd800 && c <= 0xdbff && i < string.length - 1) {\n          let c2 = string.charCodeAt(++i);\n          if ((c2 & 0xfc00) === 0xdc00) {\n            c = ((c & 0x3ff) << 10) + (c2 & 0x3ff) + 0x10000;\n          } else {\n            // unmatched surrogate.\n            i--;\n          }\n        }\n\n        if ((c & 0xffffff80) === 0) {\n          len++;\n        } else if ((c & 0xfffff800) === 0) {\n          len += 2;\n        } else if ((c & 0xffff0000) === 0) {\n          len += 3;\n        } else if ((c & 0xffe00000) === 0) {\n          len += 4;\n        }\n      }\n      return len;\n    case 'utf16le':\n    case 'utf16-le':\n    case 'utf16be':\n    case 'utf16-be':\n    case 'ucs2':\n      return string.length * 2;\n    default:\n      throw new Error('Unknown encoding ' + encoding);\n  }\n}\n\nexport {StringT as String};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}